DROP TABLE IF EXISTS a;
CREATE TABLE a (i int,  PRIMARY KEY (i));
ALTER TABLE a ADD COLUMN j int;
DROP TABLE A;
CREATE TABLE a (i int,  PRIMARY KEY (i));
INSERT INTO a VALUES (1);
DELETE FROM a WHERE i=1;
START TRANSACTION;
INSERT INTO a VALUES (1);
ROLLBACK;
START TRANSACTION;
INSERT INTO a VALUES (1);
COMMIT;
SELECT USER, COUNT_SELECT, COUNT_DELETE, COUNT_UPDATE, COUNT_INSERT, COUNT_ROLLBACK, COUNT_COMMIT, COUNT_CREATE, COUNT_ALTER, COUNT_DROP, COUNT_ADMIN  FROM DATA_DICTIONARY.SQL_COMMANDS_BY_USER;
USER	COUNT_SELECT	COUNT_DELETE	COUNT_UPDATE	COUNT_INSERT	COUNT_ROLLBACK	COUNT_COMMIT	COUNT_CREATE	COUNT_ALTER	COUNT_DROP	COUNT_ADMIN
root	0	1	0	3	1	1	2	1	2	0
set global logging_stats_enable=false;
SELECT USER, COUNT_SELECT, COUNT_DELETE, COUNT_UPDATE, COUNT_INSERT, COUNT_ROLLBACK, COUNT_COMMIT, COUNT_CREATE, COUNT_ALTER, COUNT_DROP, COUNT_ADMIN FROM DATA_DICTIONARY.SQL_COMMANDS_BY_USER;
USER	COUNT_SELECT	COUNT_DELETE	COUNT_UPDATE	COUNT_INSERT	COUNT_ROLLBACK	COUNT_COMMIT	COUNT_CREATE	COUNT_ALTER	COUNT_DROP	COUNT_ADMIN
set global logging_stats_enable=true;
CREATE TABLE b (i int,  PRIMARY KEY (i));
INSERT INTO b VALUES (1);
INSERT INTO b VALUES (2);
SELECT USER, COUNT_SELECT, COUNT_DELETE, COUNT_UPDATE, COUNT_INSERT, COUNT_ROLLBACK, COUNT_COMMIT, COUNT_CREATE, COUNT_ALTER, COUNT_DROP, COUNT_ADMIN FROM DATA_DICTIONARY.SQL_COMMANDS_BY_USER;
USER	COUNT_SELECT	COUNT_DELETE	COUNT_UPDATE	COUNT_INSERT	COUNT_ROLLBACK	COUNT_COMMIT	COUNT_CREATE	COUNT_ALTER	COUNT_DROP	COUNT_ADMIN
root	1	1	0	3	1	1	2	1	2	0
root	0	0	0	1	0	0	1	0	0	0
drizzle	0	0	0	1	0	0	0	0	0	0
DROP TABLE a,b;
