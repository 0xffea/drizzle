# transaction_log_drop
# Test of DROP TABLE statements and how the transaction log
# captures / represents them

--echo Testing simple DROP 
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, PRIMARY KEY(a));

DROP TABLE t1;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing multi-table DROP
--disable_warnings
DROP TABLE IF EXISTS t1, t2, t3;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, PRIMARY KEY(a));

CREATE TABLE t2 LIKE t1;

CREATE TABLE t3 LIKE t2;

# check our list of transactions prior to the DROP
SELECT * FROM DATA_DICTIONARY.TRANSACTION_LOG_ENTRIES;

DROP TABLE t1, t2, t3;
# The transaction log treats the above DROP as 3 
# separate transactions.  We now check the first
# two DROPs, then check the last
# NOTE: We use replace_regex to handle variable timestamps in the log

--echo Check DROP TABLE t1
--replace_regex /start_timestamp: [0-9]+/START_TIMESTAMP/  /end_timestamp: [0-9]+/END_TIMESTAMP/ /start_timestamp: [0-9]+/START_TIMESTAMP/  /end_timestamp: [0-9]+/END_TIMESTAMP/ /creation_timestamp: [0-9]+/CREATE_TIMESTAMP/  /update_timestamp: [0-9]+/UPDATE_TIMESTAMP/
SELECT PRINT_TRANSACTION_MESSAGE('transaction.log',(SELECT entry_offset FROM DATA_DICTIONARY.TRANSACTION_LOG_TRANSACTIONS WHERE TRANSACTION_ID = 7));

--echo Check DROP TABLE t2
--replace_regex /start_timestamp: [0-9]+/START_TIMESTAMP/  /end_timestamp: [0-9]+/END_TIMESTAMP/ /start_timestamp: [0-9]+/START_TIMESTAMP/  /end_timestamp: [0-9]+/END_TIMESTAMP/ /creation_timestamp: [0-9]+/CREATE_TIMESTAMP/  /update_timestamp: [0-9]+/UPDATE_TIMESTAMP/

SELECT PRINT_TRANSACTION_MESSAGE('transaction.log',(SELECT entry_offset FROM DATA_DICTIONARY.TRANSACTION_LOG_TRANSACTIONS WHERE TRANSACTION_ID = 8));

--echo Check DROP TABLE t3
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing DROP IF EXISTS positive
--disable_warnings
DROP TABLE IF EXISTS t1;
--enable_warnings

CREATE TABLE t1(a INT NOT NULL, PRIMARY KEY(a));

DROP TABLE IF EXISTS t1;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo

--echo Testing DROP IF EXISTS negative
# No table to drop, but still logged (?) 

DROP TABLE IF EXISTS t1;
--source ../plugin/transaction_log/tests/t/check_transaction_log.inc
--echo

# Truncate the log file to reset for the next test
--source ../plugin/transaction_log/tests/t/truncate_log.inc
--echo




