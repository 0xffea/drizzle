# Test Routine for Indexing in BlitzDB

--disable_warnings
drop table if exists t1, t2;
--enable_warnings

create table t1 (id int primary key, a int, b int) engine = blitzdb;
select * from t1;
insert into t1 values (1, 1, 1), (2, 2, 2), (3, 3, 3), (4, 4, 4);
insert into t1 values (5, 5, 5), (6, 6, 6), (7, 7, 7), (8, 8, 8);

# Test Duplicate Primary Key Insertions
--error 1062
insert into t1 values (1, 0, 0);
--error 1062
insert into t1 values (2, 0, 0);
--error 1062
insert into t1 values (3, 0, 0);
--error 1062
insert into t1 values (4, 0, 0);

# Test Needle in a Haystack query
select * from t1 where id = 2;
select * from t1 where id = 4;
select * from t1 where id = 6;

# Test Primary Key based Deletion and check that COUNT is working
select count (*) from t1;
delete from t1 where id = 5;
select count (*) from t1;
delete from t1 where id = 6;
select count (*) from t1;
delete from t1 where id = 7;
select count (*) from t1;
delete from t1 where id = 8;
select count (*) from t1;
select count (id) from t1;
select count (a) from t1;
select count (b) from t1;
select * from t1;
delete from t1;
select count (*) from t1;
drop table t1;

# Test Auto Increment on PK
create table t1 (id int primary key auto_increment, num int) engine = blitzdb;
insert into t1 (num) values (1);
select * from t1;
insert into t1 (num) values (1);
insert into t1 (num) values (1);
insert into t1 (num) values (1);
select count(*) from t1;
flush table t1;
select count(*) from t1;
insert into t1 (num) values (1);
insert into t1 (num) values (1);
insert into t1 (num) values (1);
insert into t1 (num) values (1);
select count(*) from t1;
select count(num) from t1;
select * from t1;
drop table t1;

# Test COUNT on a single auto column table
create table t1 (id int primary key auto_increment) engine = blitzdb;
insert into t1 values ();
insert into t1 values ();
insert into t1 values ();
insert into t1 values ();
select count(*) from t1;
delete from t1 where id = 1;
delete from t1 where id = 2;
select count(*) from t1;
insert into t1 values ();
insert into t1 values ();
select count(*) from t1;
drop table t1;

# Test VARCHAR field as a Primary Key
create table t1 (id varchar(64) primary key, country varchar(64)) engine = blitzdb;
insert into t1 values ('amsterdam', 'netherlands');
insert into t1 values ('budapest', 'hungary');
insert into t1 values ('copenhagen', 'denmark');
insert into t1 values ('dublin', 'ireland');
insert into t1 values ('edinburgh', 'scotland');
insert into t1 values ('fukuoka', 'japan');
insert into t1 values ('geneva', 'switzerland');

select * from t1;
select country from t1 where id = 'dublin';
select country from t1 where id = 'geneva';
select country from t1 where id = 'amsterdam';
select country from t1 where id = 'non existent key';
select country from t1 where id = 'edinburgh';
select country from t1 where id = 'copenhagen';
select country from t1 where id = 'fukuoka';
select country from t1 where id = 'budapest';
select count (id) from t1;

delete from t1 where id = 'geneva';
delete from t1 where id = 'fukuoka';
select count (id) from t1;
select count (*) from t1;
select * from t1;
drop table t1;

# Test HA_KEYTYPE_VARTEXT1 as a Primary Key
create table t1 (a varchar(10) primary key, b int) engine = blitzdb;
insert into t1 values ('aaa', 1), ('bbb', 2), ('ccc', 3), ('ddd', 4);
insert into t1 values ('eee', 5), ('fff', 6), ('ggg', 7), ('hhh', 8);

select * from t1 where a = 'aaa';
select * from t1 where a = 'bbb';
select * from t1 where a = 'ccc';
select * from t1 where a = 'ddd';

select * from t1;
delete from t1 where a = 'ggg';
delete from t1 where a = 'hhh';
select * from t1;

update t1 set a = 'zzz' where a = 'fff';
select * from t1 where a = 'fff';
select * from t1 where a = 'zzz';
drop table t1;

# Test UPDATE on a VARCHAR key
create table t1 (id varchar(255) primary key, num int) engine = blitzdb;
insert into t1 values ('a', 1);
insert into t1 values ('b', 2);
insert into t1 values ('c', 3);
insert into t1 values ('d', 4);
insert into t1 values ('e', 5);
select * from t1;

--error 1062
update t1 set id = 'b' where id = 'a';
--error 1062
update t1 set id = 'c' where id = 'b';
--error 1062
update t1 set id = 'd' where id = 'c';
--error 1062
update t1 set id = 'e' where id = 'd';

update t1 set id = 'f' where id = 'a';
update t1 set id = 'g' where id = 'b';
update t1 set id = 'h' where id = 'c';
update t1 set id = 'i' where id = 'd';
update t1 set id = 'j' where id = 'e';
select * from t1;
drop table t1;

# Test UPDATE on a DOUBLE key
create table t1 (id double primary key, textual varchar(128)) engine = blitzdb;
insert into t1 values (1.0, 'one-zero');
insert into t1 values (1.1, 'one-one');
insert into t1 values (1.2, 'one-two');
insert into t1 values (1.3, 'one-three');
insert into t1 values (1.4, 'one-four');
select * from t1;

--error 1062
update t1 set id = 1.1 where id = 1.0;
--error 1062
update t1 set id = 1.2 where id = 1.0;
--error 1062
update t1 set id = 1.3 where id = 1.0;
--error 1062
update t1 set id = 1.4 where id = 1.0;

update t1 set id = 2.0 where id = 1.0;
update t1 set id = 2.1 where id = 1.1;
update t1 set id = 2.2 where id = 1.2;
update t1 set id = 2.3 where id = 1.3;
update t1 set id = 2.4 where id = 1.4;
select * from t1;

--error 1062
update t1 set id = 2.0 where id = 2.4;

update t1 set id = 1.0 where id = 2.0;
update t1 set id = 1.1 where id = 2.1;
select * from t1;
drop table t1;

# Test basic index scan on INT primary keys.
create table t1 (a int primary key) engine = blitzdb;
insert into t1 values (1), (2), (3), (4), (5), (6);

# forward scan
explain select * from t1 order by a desc;
select * from t1;

# reverse scan
explain select * from t1 order by a desc;
select * from t1 order by a desc;

# write in random order
delete from t1;
insert into t1 values (6), (1), (5), (3), (2), (4);

# forward scan
explain select * from t1;
select * from t1;

# reverse scan
explain select * from t1 order by a desc;
select * from t1 order by a desc;

delete from t1;

# test ranges by index
insert into t1 values (1),(2),(3),(4),(5),(6),(7),(8),(9),(10); 
insert into t1 values (11),(12),(13),(14),(15),(16),(17),(18),(19),(20);
insert into t1 values (21),(22),(23),(24),(25),(26),(27),(28),(29),(30);
insert into t1 values (31),(32),(33),(34),(35),(36),(37),(38),(39),(40);
insert into t1 values (41),(42),(43),(44),(45),(46),(47),(48),(49),(50);

explain select * from t1 where a > 20 and a < 30;
select * from t1 where a > 20 and a < 38;

# contradiction test
explain select * from t1 where a > 20 and a < 30;
select * from t1 where a > 20 and a < 20;

# test aggregate functions
explain select max(a) from t1;
select max(a) from t1;
explain select max(a) from t1;
select min(a) from t1;
explain select sum(a) from t1;
select sum(a) from t1;
explain select * from t1 where a in (10, 20, 30, 40, 50);
select * from t1 where a in (10, 20, 30, 40, 50);

drop table t1;

# Test basic forward index scan on BIGINT primary keys.
create table t1 (a bigint primary key) engine = blitzdb;
insert into t1 values (10), (20), (30), (40), (50), (60);

explain select * from t1;
select * from t1;
select * from t1 order by a desc;
delete from t1;

insert into t1 values (60), (10), (50), (30), (20), (40);
select * from t1;
select * from t1 order by a desc;
drop table t1;

# Test basic index scan on VARTEXT1 primary keys.
create table t1 (a varchar(10) primary key) engine = blitzdb;
insert into t1 values ('a'), ('b'), ('c'), ('d'), ('e');
select * from t1;
explain select * from t1 order by a desc;
select * from t1 order by a desc;
delete from t1;
insert into t1 values ('c'), ('a'), ('e'), ('b'), ('d');
select * from t1;
delete from t1;

# Test it with multi byte characters (Japanese).
insert into t1 values ('う'), ('お'), ('い'), ('あ'), ('え');
insert into t1 values ('こ'), ('け'), ('か'), ('く'), ('き');
explain select * from t1;
select * from t1;
explain select * from t1 order by a desc;
select * from t1 order by a desc;
drop table t1;

# Test basic index scan on VARTEXT2 primary keys.
create table t1 (a varchar(255) primary key) engine = blitzdb;
insert into t1 values ('a'), ('b'), ('c'), ('d'), ('e');
explain select * from t1;
select * from t1;
select * from t1 order by a desc;
delete from t1;
insert into t1 values ('c'), ('a'), ('e'), ('b'), ('d');
select * from t1;
delete from t1;
drop table t1;

# Test UNIQUE index insertion 
create table t1 (a int, unique index(a)) engine = blitzdb;
insert into t1 values (1), (2);

--error 1062
insert into t1 values (1);
--error 1062
insert into t1 values (2);

insert into t1 values (3);
insert into t1 values (4);
drop table t1;

# Test INDEX insertion
create table t1 (a int, index(a)) engine = blitzdb;
insert into t1 values (1), (2), (3), (4);
insert into t1 values (1), (2), (3), (4);
drop table t1;
