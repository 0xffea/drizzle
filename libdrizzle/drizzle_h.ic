struct character_set;
struct rand_struct;
struct st_list;
struct st_mem_root;
struct st_drizzle;
struct st_drizzle_bind;
struct st_drizzle_daemon;
struct st_DRIZZLE_DATA;
struct st_DRIZZLE_FIELD;
struct st_drizzle_ftparser;
struct st_drizzle_ftparser_boolean_info;
struct st_drizzle_ftparser_param;
struct st_drizzle_information_schema;
struct st_drizzle_lex_string;
struct st_drizzle_methods;
struct st_drizzle_options;
struct st_drizzle_parameters;
struct st_drizzle_plugin;
struct st_drizzle_res;
struct st_DRIZZLE_ROWs;
struct st_drizzle_show_var;
struct st_drizzle_stmt;
struct st_drizzle_storage_engine;
struct st_drizzle_time;
struct st_drizzle_value;
struct st_drizzle_xid;
struct st_net;
struct st_typelib;
struct st_udf_args;
struct st_udf_init;
struct st_used_mem;
enum Item_result;
enum enum_cursor_type;
enum enum_field_types;
enum enum_ft_token_type;
enum enum_ftparser_mode;
enum enum_drizzle_set_option;
enum enum_mysql_show_type;
enum enum_mysql_stmt_state;
enum enum_mysql_timestamp_type;
enum enum_server_command;
enum enum_stmt_attr_type;
enum drizzle_enum_shutdown_level;
enum drizzle_option;
enum drizzle_protocol_type;
enum drizzle_status;
# 139 "drizzle.h"
typedef struct st_DRIZZLE_ROWs DRIZZLE_ROWS;
# 23 "my_list.h"
typedef struct st_list LIST;
# 34 "my_alloc.h"
typedef struct st_mem_root MEM_ROOT;
# 235 "drizzle.h"
typedef struct st_drizzle MYSQL;
# 542 "drizzle.h"
typedef struct st_drizzle_bind MYSQL_BIND;
# 95 "drizzle.h"
typedef struct st_DRIZZLE_FIELD DRIZZLE_FIELD;
# 120 "drizzle.h"
typedef unsigned int DRIZZLE_FIELD_OFFSET;
# 35 "mysql/plugin.h"
typedef struct st_drizzle_lex_string MYSQL_LEX_STRING;
# 304 "drizzle.h"
typedef struct st_drizzle_parameters DRIZZLE_PARAMETERS;
# 280 "drizzle.h"
typedef struct st_drizzle_res DRIZZLE_RES;
# 119 "drizzle.h"
typedef char * * DRIZZLE_ROW;
# 145 "drizzle.h"
typedef DRIZZLE_ROWS * DRIZZLE_ROW_OFFSET;
# 571 "drizzle.h"
typedef struct st_drizzle_stmt MYSQL_STMT;
# 52 "mysql/plugin.h"
typedef struct st_drizzle_xid MYSQL_XID;
# 220 "drizzle.h"
typedef struct character_set MY_CHARSET_INFO;
# 204 "drizzle_com.h"
typedef struct st_net NET;
# 22 "typelib.h"
typedef struct st_typelib TYPELIB;
# 194 "drizzle_com.h"
typedef struct st_vio Vio;
# 28 "my_list.h"
typedef int (* list_walk_action)(void *, void *);
# 51 "drizzle.h"
typedef char my_bool;
# 65 "drizzle.h"
typedef int my_socket;
# 128 "drizzle.h"
typedef unsigned long long int my_ulonglong;
# 214 "/usr/lib/gcc/i486-linux-gnu/4.1.3/include/stddef.h"
typedef unsigned int size_t;
# 149 "drizzle.h"
typedef struct embedded_query_result EMBEDDED_QUERY_RESULT;
# 150 "drizzle.h"
typedef struct st_DRIZZLE_DATA DRIZZLE_DATA;
# 495 "mysql/plugin.h"
typedef struct st_drizzle_ftparser_boolean_info MYSQL_FTPARSER_BOOLEAN_INFO;
# 557 "mysql/plugin.h"
typedef struct st_drizzle_ftparser_param MYSQL_FTPARSER_PARAM;
# 641 "drizzle.h"
typedef struct st_drizzle_methods DRIZZLE_METHODS;
# 47 "mysql_time.h"
typedef struct st_drizzle_time DRIZZLE_TIME;
# 394 "drizzle_com.h"
typedef struct st_udf_args UDF_ARGS;
# 408 "drizzle_com.h"
typedef struct st_udf_init UDF_INIT;
# 26 "my_alloc.h"
typedef struct st_used_mem USED_MEM;
# 123 "mysql/plugin.h"
typedef int (* mysql_show_var_func)(void *, struct st_drizzle_show_var *, char *);
# 170 "mysql/plugin.h"
typedef int (* mysql_var_check_func)(void * thd, struct st_drizzle_sys_var * var, void * save, struct st_drizzle_value * value);
# 188 "mysql/plugin.h"
typedef void (* mysql_var_update_func)(void * thd, struct st_drizzle_sys_var * var, void * var_ptr, void * save);
# 220 "drizzle.h"
struct __attribute__((aligned(__alignof__(unsigned int)), aligned(__alignof__(void *)))) character_set
  {
    unsigned int number;
    unsigned int state;
    char const * csname;
    char const * name;
    char const * comment;
    char const * dir;
    unsigned int mbminlen;
    unsigned int mbmaxlen;
  };
# 380 "drizzle_com.h"
struct __attribute__((aligned(__alignof__(unsigned long int)), aligned(__alignof__(double)))) rand_struct
  {
    unsigned long int seed1;
    unsigned long int seed2;
    unsigned long int max_value;
    double max_value_dbl;
  };
# 23 "my_list.h"
struct __attribute__((aligned(__alignof__(void *)))) st_list
  {
    struct st_list * prev;
    struct st_list * next;
    void * data;
  };
# 34 "my_alloc.h"
struct __attribute__((aligned(__alignof__(void *)), aligned(__alignof__(unsigned int)))) st_mem_root
  {
    USED_MEM * free;
    USED_MEM * used;
    USED_MEM * pre_alloc;
    size_t min_malloc;
    size_t block_size;
    unsigned int block_num;
    unsigned int first_block_usage;
    void (* error_handler)(void);
  };
# 235 "drizzle.h"
struct __attribute__((aligned(__alignof__(void *)), aligned(__alignof__(unsigned long long int)))) st_drizzle
  {
    NET net;
    unsigned char * connector_fd;
    char * host;
    char * user;
    char * passwd;
    char * unix_socket;
    char * server_version;
    char * host_info;
    char * info;
    char * db;
    struct charset_info_st * charset;
    DRIZZLE_FIELD * fields;
    MEM_ROOT field_alloc;
    my_ulonglong affected_rows;
    my_ulonglong insert_id;
    my_ulonglong extra_info;
    unsigned long int thread_id;
    unsigned long int packet_length;
    unsigned int port;
    unsigned long int client_flag;
    unsigned long int server_capabilities;
    unsigned int protocol_version;
    unsigned int field_count;
    unsigned int server_status;
    unsigned int server_language;
    unsigned int warning_count;
    struct st_drizzle_options options;
    enum drizzle_status status;
    my_bool free_me;
    my_bool reconnect;
    char scramble[(20 + 1)];
    my_bool unused1;
    void * unused2;
    void * unused3;
    void * unused4;
    void * unused5;
    LIST * stmts;
    struct st_drizzle_methods const * methods;
    void * thd;
    my_bool * unbuffered_fetch_owner;
    char * info_buffer;
    void * extension;
  };
# 542 "drizzle.h"
struct __attribute__((aligned(__alignof__(void *)), aligned(__alignof__(unsigned long int)))) st_drizzle_bind
  {
    unsigned long int * length;
    my_bool * is_null;
    void * buffer;
    my_bool * error;
    unsigned char * row_ptr;
    void (* store_param_func)(NET * net, struct st_drizzle_bind * param);
    void (* fetch_result)(struct st_drizzle_bind *, DRIZZLE_FIELD *, unsigned char * * row);
    void (* skip_result)(struct st_drizzle_bind *, DRIZZLE_FIELD *, unsigned char * * row);
    unsigned long int buffer_length;
    unsigned long int offset;
    unsigned long int length_value;
    unsigned int param_number;
    unsigned int pack_length;
    enum enum_field_types buffer_type;
    my_bool error_value;
    my_bool is_unsigned;
    my_bool long_data_used;
    my_bool is_null_value;
    void * extension;
  };
# 628 "mysql/plugin.h"
struct __attribute__((aligned(__alignof__(int)))) st_drizzle_daemon
  {
    int interface_version;
  };
# 150 "drizzle.h"
struct __attribute__((aligned(__alignof__(void *)), aligned(__alignof__(unsigned long long int)))) st_DRIZZLE_DATA
  {
    DRIZZLE_ROWS * data;
    struct embedded_query_result * embedded_info;
    MEM_ROOT alloc;
    my_ulonglong rows;
    unsigned int fields;
    void * extension;
  };
# 95 "drizzle.h"
struct __attribute__((aligned(__alignof__(void *)), aligned(__alignof__(unsigned long int)))) st_DRIZZLE_FIELD
  {
    char * name;
    char * org_name;
    char * table;
    char * org_table;
    char * db;
    char * catalog;
    char * def;
    unsigned long int length;
    unsigned long int max_length;
    unsigned int name_length;
    unsigned int org_name_length;
    unsigned int table_length;
    unsigned int org_table_length;
    unsigned int db_length;
    unsigned int catalog_length;
    unsigned int def_length;
    unsigned int flags;
    unsigned int decimals;
    unsigned int charsetnr;
    enum enum_field_types type;
    void * extension;
  };
# 581 "mysql/plugin.h"
struct __attribute__((aligned(__alignof__(int)), aligned(__alignof__(void *)))) st_drizzle_ftparser
  {
    int interface_version;
    int (* parse)(MYSQL_FTPARSER_PARAM * param);
    int (* init)(MYSQL_FTPARSER_PARAM * param);
    int (* deinit)(MYSQL_FTPARSER_PARAM * param);
  };
# 495 "mysql/plugin.h"
struct __attribute__((aligned(__alignof__(int)), aligned(__alignof__(void *)))) st_drizzle_ftparser_boolean_info
  {
    enum enum_ft_token_type type;
    int yesno;
    int weight_adjust;
    char wasign;
    char trunc;
    char prev;
    char * quot;
  };
# 557 "mysql/plugin.h"
struct __attribute__((aligned(__alignof__(void *)), aligned(__alignof__(int)))) st_drizzle_ftparser_param
  {
    int (* mysql_parse)(struct st_drizzle_ftparser_param *, char * doc, int);
    int (* mysql_add_word)(struct st_drizzle_ftparser_param *, char * word, int, MYSQL_FTPARSER_BOOLEAN_INFO * boolean_info);
    void * ftparser_state;
    void * mysql_ftparam;
    struct charset_info_st * cs;
    char * doc;
    int length;
    int flags;
    enum enum_ftparser_mode mode;
  };
# 638 "mysql/plugin.h"
struct __attribute__((aligned(__alignof__(int)))) st_drizzle_information_schema
  {
    int interface_version;
  };
# 29 "mysql/plugin.h"
struct __attribute__((aligned(__alignof__(void *)), aligned(__alignof__(unsigned int)))) st_drizzle_lex_string
  {
    char * str;
    unsigned int length;
  };
# 641 "drizzle.h"
struct __attribute__((aligned(__alignof__(void *)))) st_drizzle_methods
  {
    my_bool (* read_query_result)(DRIZZLE * mysql);
    my_bool (* advanced_command)(DRIZZLE * mysql, enum enum_server_command, unsigned char const * header, unsigned long int, unsigned char const * arg, unsigned long int, my_bool, MYSQL_STMT * stmt);
    DRIZZLE_DATA * (* read_rows)(DRIZZLE * mysql, DRIZZLE_FIELD * DRIZZLE_FIELDs, unsigned int);
    DRIZZLE_RES * (* use_result)(DRIZZLE * mysql);
    void (* fetch_lengths)(unsigned long int * to, DRIZZLE_ROW, unsigned int);
    void (* flush_use_result)(DRIZZLE * mysql);
    DRIZZLE_FIELD * (* list_fields)(DRIZZLE * mysql);
    my_bool (* read_prepare_result)(DRIZZLE * mysql, MYSQL_STMT * stmt);
    int (* stmt_execute)(MYSQL_STMT * stmt);
    int (* read_binary_rows)(MYSQL_STMT * stmt);
    int (* unbuffered_fetch)(DRIZZLE * mysql, char * * row);
    void (* free_embedded_thd)(DRIZZLE * mysql);
    char const * (* read_statistics)(DRIZZLE * mysql);
    my_bool (* next_result)(DRIZZLE * mysql);
    int (* read_change_user_result)(DRIZZLE * mysql, char * buff, char const * passwd);
    int (* read_rows_from_cursor)(MYSQL_STMT * stmt);
  };
# 173 "drizzle.h"
struct __attribute__((aligned(__alignof__(unsigned long int)), aligned(__alignof__(void *)))) st_drizzle_options
  {
    unsigned int connect_timeout;
    unsigned int read_timeout;
    unsigned int write_timeout;
    unsigned int port;
    unsigned int protocol;
    unsigned long int client_flag;
    char * host;
    char * user;
    char * password;
    char * unix_socket;
    char * db;
    struct st_dynamic_array * init_commands;
    char * my_cnf_file;
    char * my_cnf_group;
    char * charset_dir;
    char * charset_name;
    char * ssl_key;
    char * ssl_cert;
    char * ssl_ca;
    char * ssl_capath;
    char * ssl_cipher;
    char * shared_memory_base_name;
    unsigned long int max_allowed_packet;
    my_bool use_ssl;
    my_bool compress;
    my_bool named_pipe;
    my_bool unused1;
    my_bool unused2;
    my_bool unused3;
    my_bool unused4;
    enum mysql_option methods_to_use;
    char * client_ip;
    my_bool secure_auth;
    my_bool report_data_truncation;
    int (* local_infile_init)(void * *, char const *, void *);
    int (* local_infile_read)(void *, char *, unsigned int);
    void (* local_infile_end)(void);
    int (* local_infile_error)(void *, char *, unsigned int);
    void * local_infile_userdata;
    void * extension;
  };
# 304 "drizzle.h"
struct __attribute__((aligned(__alignof__(void *)))) st_drizzle_parameters
  {
    unsigned long int * p_max_allowed_packet;
    unsigned long int * p_net_buffer_length;
    void * extension;
  };
# 384 "mysql/plugin.h"
struct __attribute__((aligned(__alignof__(int)), aligned(__alignof__(void *)))) st_drizzle_plugin
  {
    int type;
    void * info;
    char const * name;
    char const * author;
    char const * descr;
    int license;
    int (* init)(void);
    int (* deinit)(void);
    unsigned int version;
    struct st_drizzle_show_var * status_vars;
    struct st_drizzle_sys_var * * system_vars;
    void * __reserved1;
  };
# 280 "drizzle.h"
struct __attribute__((aligned(__alignof__(unsigned long long int)), aligned(__alignof__(void *)))) st_drizzle_res
  {
    my_ulonglong row_count;
    DRIZZLE_FIELD * fields;
    DRIZZLE_DATA * data;
    DRIZZLE_ROWS * data_cursor;
    unsigned long int * lengths;
    DRIZZLE * handle;
    struct st_drizzle_methods const * methods;
    DRIZZLE_ROW row;
    DRIZZLE_ROW current_row;
    MEM_ROOT field_alloc;
    unsigned int field_count;
    unsigned int current_field;
    my_bool eof;
    my_bool unbuffered_fetch_cancelled;
    void * extension;
  };
# 139 "drizzle.h"
struct __attribute__((aligned(__alignof__(void *)), aligned(__alignof__(unsigned long int)))) st_DRIZZLE_ROWs
  {
    struct st_DRIZZLE_ROWs * next;
    DRIZZLE_ROW data;
    unsigned long int length;
  };
# 116 "mysql/plugin.h"
struct __attribute__((aligned(__alignof__(void *)))) st_drizzle_show_var
  {
    char const * name;
    char * value;
    enum enum_mysql_show_type type;
  };
# 571 "drizzle.h"
struct __attribute__((aligned(__alignof__(void *)), aligned(__alignof__(unsigned long long int)))) st_drizzle_stmt
  {
    MEM_ROOT mem_root;
    LIST list;
    DRIZZLE * mysql;
    MYSQL_BIND * params;
    MYSQL_BIND * bind;
    DRIZZLE_FIELD * fields;
    DRIZZLE_DATA result;
    DRIZZLE_ROWS * data_cursor;
    int (* read_row_func)(struct st_drizzle_stmt * stmt, unsigned char * * row);
    my_ulonglong affected_rows;
    my_ulonglong insert_id;
    unsigned long int stmt_id;
    unsigned long int flags;
    unsigned long int prefetch_rows;
    unsigned int server_status;
    unsigned int last_errno;
    unsigned int param_count;
    unsigned int field_count;
    enum enum_mysql_stmt_state state;
    char last_error[512];
    char sqlstate[(5 + 1)];
    my_bool send_types_to_server;
    my_bool bind_param_done;
    unsigned char bind_result_done;
    my_bool unbuffered_fetch_cancelled;
    my_bool update_max_length;
    void * extension;
  };
# 616 "mysql/plugin.h"
struct __attribute__((aligned(__alignof__(int)))) st_drizzle_storage_engine
  {
    int interface_version;
  };
# 47 "mysql_time.h"
struct __attribute__((aligned(__alignof__(unsigned long int)))) st_drizzle_time
  {
    unsigned int year;
    unsigned int month;
    unsigned int day;
    unsigned int hour;
    unsigned int minute;
    unsigned int second;
    unsigned long int second_part;
    my_bool neg;
    enum enum_mysql_timestamp_type time_type;
  };
# 658 "mysql/plugin.h"
struct __attribute__((aligned(__alignof__(void *)))) st_drizzle_value
  {
    int (* value_type)(struct st_drizzle_value *);
    char const * (* val_str)(struct st_drizzle_value *, char * buffer, int * length);
    int (* val_real)(struct st_drizzle_value *, double * realbuf);
    int (* val_int)(struct st_drizzle_value *, long long int * intbuf);
  };
# 46 "mysql/plugin.h"
struct __attribute__((aligned(__alignof__(long int)))) st_drizzle_xid
  {
    long int formatID;
    long int gtrid_length;
    long int bqual_length;
    char data[128];
  };
# 204 "drizzle_com.h"
struct __attribute__((aligned(__alignof__(void *)), aligned(__alignof__(unsigned long int)))) st_net
  {
    Vio * vio;
    unsigned char * buff;
    unsigned char * buff_end;
    unsigned char * write_pos;
    unsigned char * read_pos;
    my_socket fd;
    unsigned long int remain_in_buf;
    unsigned long int length;
    unsigned long int buf_length;
    unsigned long int where_b;
    unsigned long int max_packet;
    unsigned long int max_packet_size;
    unsigned int pkt_nr;
    unsigned int compress_pkt_nr;
    unsigned int write_timeout;
    unsigned int read_timeout;
    unsigned int retry_count;
    int fcntl;
    unsigned int * return_status;
    unsigned char reading_or_writing;
    char save_char;
    my_bool unused1;
    my_bool unused2;
    my_bool compress;
    my_bool unused3;
    unsigned char * unused;
    unsigned int last_errno;
    unsigned char error;
    my_bool unused4;
    my_bool unused5;
    char last_error[512];
    char sqlstate[(5 + 1)];
    void * extension;
  };
# 22 "typelib.h"
struct __attribute__((aligned(__alignof__(unsigned int)), aligned(__alignof__(void *)))) st_typelib
  {
    unsigned int count;
    char const * name;
    char const * * type_names;
    unsigned int * type_lengths;
  };
# 394 "drizzle_com.h"
struct __attribute__((aligned(__alignof__(unsigned int)), aligned(__alignof__(void *)))) st_udf_args
  {
    unsigned int arg_count;
    enum Item_result * arg_type;
    char * * args;
    unsigned long int * lengths;
    char * maybe_null;
    char * * attributes;
    unsigned long int * attribute_lengths;
    void * extension;
  };
# 408 "drizzle_com.h"
struct __attribute__((aligned(__alignof__(unsigned long int)), aligned(__alignof__(void *)))) st_udf_init
  {
    my_bool maybe_null;
    unsigned int decimals;
    unsigned long int max_length;
    char * ptr;
    my_bool const_item;
    void * extension;
  };
# 26 "my_alloc.h"
struct __attribute__((aligned(__alignof__(void *)), aligned(__alignof__(unsigned int)))) st_used_mem
  {
    struct st_used_mem * next;
    unsigned int left;
    unsigned int size;
  };
# 391 "drizzle_com.h"
enum Item_result
  {
    STRING_RESULT = 0,
    REAL_RESULT = 1,
    INT_RESULT = 2,
    ROW_RESULT = 3,
    DECIMAL_RESULT = 4,
  };
# 336 "drizzle_com.h"
enum enum_cursor_type
  {
    CURSOR_TYPE_NO_CURSOR = 0,
    CURSOR_TYPE_READ_ONLY = 1,
    CURSOR_TYPE_FOR_UPDATE = 2,
    CURSOR_TYPE_SCROLLABLE = 4,
  };
# 249 "drizzle_com.h"
enum enum_field_types
  {
    DRIZZLE_TYPE_DECIMAL = 0,
    DRIZZLE_TYPE_TINY = 1,
    DRIZZLE_TYPE_SHORT = 2,
    DRIZZLE_TYPE_LONG = 3,
    DRIZZLE_TYPE_FLOAT = 4,
    DRIZZLE_TYPE_DOUBLE = 5,
    DRIZZLE_TYPE_NULL = 6,
    DRIZZLE_TYPE_TIMESTAMP = 7,
    DRIZZLE_TYPE_LONGLONG = 8,
    DRIZZLE_TYPE_INT24 = 9,
    DRIZZLE_TYPE_DATE = 10,
    DRIZZLE_TYPE_TIME = 11,
    DRIZZLE_TYPE_DATETIME = 12,
    DRIZZLE_TYPE_YEAR = 13,
    DRIZZLE_TYPE_NEWDATE = 14,
    DRIZZLE_TYPE_VARCHAR = 15,
    DRIZZLE_TYPE_NEWDECIMAL = 246,
    DRIZZLE_TYPE_ENUM = 247,
    DRIZZLE_TYPE_SET = 248,
    DRIZZLE_TYPE_TINY_BLOB = 249,
    DRIZZLE_TYPE_MEDIUM_BLOB = 250,
    DRIZZLE_TYPE_LONG_BLOB = 251,
    DRIZZLE_TYPE_BLOB = 252,
    DRIZZLE_TYPE_VAR_STRING = 253,
    DRIZZLE_TYPE_STRING = 254,
    DRIZZLE_TYPE_GEOMETRY = 255,
  };
# 455 "mysql/plugin.h"
enum enum_ft_token_type
  {
    FT_TOKEN_EOF = 0,
    FT_TOKEN_WORD = 1,
    FT_TOKEN_LEFT_PAREN = 2,
    FT_TOKEN_RIGHT_PAREN = 3,
    FT_TOKEN_STOPWORD = 4,
  };
# 407 "mysql/plugin.h"
enum enum_ftparser_mode
  {
    MYSQL_FTPARSER_SIMPLE_MODE = 0,
    MYSQL_FTPARSER_WITH_STOPWORDS = 1,
    MYSQL_FTPARSER_FULL_BOOLEAN_INFO = 2,
  };
# 346 "drizzle_com.h"
enum enum_drizzle_set_option
  {
    MYSQL_OPTION_MULTI_STATEMENTS_ON = 0,
    MYSQL_OPTION_MULTI_STATEMENTS_OFF = 1,
  };
# 109 "mysql/plugin.h"
enum enum_mysql_show_type
  {
    SHOW_UNDEF = 0,
    SHOW_BOOL = 1,
    SHOW_INT = 2,
    SHOW_LONG = 3,
    SHOW_LONGLONG = 4,
    SHOW_CHAR = 5,
    SHOW_CHAR_PTR = 6,
    SHOW_ARRAY = 7,
    SHOW_FUNC = 8,
    SHOW_DOUBLE = 9,
  };
# 472 "drizzle.h"
enum enum_mysql_stmt_state
  {
    MYSQL_STMT_INIT_DONE = 1,
    MYSQL_STMT_PREPARE_DONE = 2,
    MYSQL_STMT_EXECUTE_DONE = 3,
    MYSQL_STMT_FETCH_DONE = 4,
  };
# 28 "mysql_time.h"
enum enum_mysql_timestamp_type
  {
    DRIZZLE_TIMESTAMP_NONE = -(2),
    DRIZZLE_TIMESTAMP_ERROR = -(1),
    DRIZZLE_TIMESTAMP_DATE = 0,
    DRIZZLE_TIMESTAMP_DATETIME = 1,
    DRIZZLE_TIMESTAMP_TIME = 2,
  };
# 63 "drizzle_com.h"
enum enum_server_command
  {
    COM_SLEEP = 0,
    COM_QUIT = 1,
    COM_INIT_DB = 2,
    COM_QUERY = 3,
    COM_FIELD_LIST = 4,
    COM_CREATE_DB = 5,
    COM_DROP_DB = 6,
    COM_REFRESH = 7,
    COM_SHUTDOWN = 8,
    COM_STATISTICS = 9,
    COM_PROCESS_INFO = 10,
    COM_CONNECT = 11,
    COM_PROCESS_KILL = 12,
    COM_DEBUG = 13,
    COM_PING = 14,
    COM_TIME = 15,
    COM_DELAYED_INSERT = 16,
    COM_CHANGE_USER = 17,
    COM_BINLOG_DUMP = 18,
    COM_TABLE_DUMP = 19,
    COM_CONNECT_OUT = 20,
    COM_REGISTER_SLAVE = 21,
    COM_STMT_PREPARE = 22,
    COM_STMT_EXECUTE = 23,
    COM_STMT_SEND_LONG_DATA = 24,
    COM_STMT_CLOSE = 25,
    COM_STMT_RESET = 26,
    COM_SET_OPTION = 27,
    COM_STMT_FETCH = 28,
    COM_DAEMON = 29,
    COM_END = 30,
  };
# 618 "drizzle.h"
enum enum_stmt_attr_type
  {
    STMT_ATTR_UPDATE_MAX_LENGTH = 0,
    STMT_ATTR_CURSOR_TYPE = 1,
    STMT_ATTR_PREFETCH_ROWS = 2,
  };
# 311 "drizzle_com.h"
enum drizzle_enum_shutdown_level
  {
    SHUTDOWN_DEFAULT = 0,
    SHUTDOWN_WAIT_CONNECTIONS = (unsigned char)((1 << 0)),
    SHUTDOWN_WAIT_TRANSACTIONS = (unsigned char)((1 << 1)),
    SHUTDOWN_WAIT_UPDATES = (unsigned char)((1 << 3)),
    SHUTDOWN_WAIT_ALL_BUFFERS = ((unsigned char)((1 << 3)) << 1),
    SHUTDOWN_WAIT_CRITICAL_BUFFERS = (((unsigned char)((1 << 3)) << 1) + 1),
    KILL_CONNECTION = 255,
  };
# 160 "drizzle.h"
enum mysql_option
  {
    DRIZZLE_OPT_CONNECT_TIMEOUT = 0,
    DRIZZLE_OPT_COMPRESS = 1,
    DRIZZLE_OPT_NAMED_PIPE = 2,
    DRIZZLE_INIT_COMMAND = 3,
    DRIZZLE_READ_DEFAULT_FILE = 4,
    DRIZZLE_READ_DEFAULT_GROUP = 5,
    DRIZZLE_SET_CHARSET_DIR = 6,
    DRIZZLE_SET_CHARSET_NAME = 7,
    DRIZZLE_OPT_LOCAL_INFILE = 8,
    DRIZZLE_OPT_PROTOCOL = 9,
    DRIZZLE_SHARED_MEMORY_BASE_NAME = 10,
    DRIZZLE_OPT_READ_TIMEOUT = 11,
    DRIZZLE_OPT_WRITE_TIMEOUT = 12,
    DRIZZLE_OPT_USE_RESULT = 13,
    DRIZZLE_OPT_USE_REMOTE_CONNECTION = 14,
    DRIZZLE_OPT_USE_EMBEDDED_CONNECTION = 15,
    DRIZZLE_OPT_GUESS_CONNECTION = 16,
    DRIZZLE_SET_CLIENT_IP = 17,
    DRIZZLE_SECURE_AUTH = 18,
    DRIZZLE_REPORT_DATA_TRUNCATION = 19,
    DRIZZLE_OPT_RECONNECT = 20,
    DRIZZLE_OPT_SSL_VERIFY_SERVER_CERT = 21,
  };
# 214 "drizzle.h"
enum mysql_protocol_type
  {
    DRIZZLE_PROTOCOL_DEFAULT = 0,
    DRIZZLE_PROTOCOL_TCP = 1,
    DRIZZLE_PROTOCOL_SOCKET = 2,
    DRIZZLE_PROTOCOL_PIPE = 3,
    DRIZZLE_PROTOCOL_MEMORY = 4,
  };
# 209 "drizzle.h"
enum drizzle_status
  {
    DRIZZLE_STATUS_READY = 0,
    DRIZZLE_STATUS_GET_RESULT = 1,
    DRIZZLE_STATUS_USE_RESULT = 2,
  };
# 452 "drizzle_com.h"
extern my_bool check_scramble(char const * reply, char const * message, unsigned char const * hash_stage2);
# 445 "drizzle_com.h"
extern my_bool check_scramble_323(char const *, char const * message, unsigned long int * salt);
# 35 "typelib.h"
extern TYPELIB * copy_typelib(MEM_ROOT * root, TYPELIB * from);
# 440 "drizzle_com.h"
extern void create_random_string(char * to, unsigned int, struct rand_struct * rand_st);
# 32 "typelib.h"
extern int find_type(char * x, TYPELIB const * typelib, unsigned int);
# 30 "typelib.h"
extern int find_type_or_exit(char const * x, TYPELIB * typelib, char const * option);
# 29 "typelib.h"
extern my_ulonglong find_typeset(char * x, TYPELIB * typelib, int * error_position);
# 454 "drizzle_com.h"
extern void get_salt_from_password(unsigned char * res, char const * password);
# 447 "drizzle_com.h"
extern void get_salt_from_password_323(unsigned long int * res, char const * password);
# 460 "drizzle_com.h"
extern char * get_tty_password(char const * opt_message);
# 34 "typelib.h"
extern char const * get_type(TYPELIB * typelib, unsigned int);
# 442 "drizzle_com.h"
extern void hash_password(unsigned long int * to, char const * password, unsigned int);
# 30 "my_list.h"
extern LIST * list_add(LIST * root, LIST * element);
# 32 "my_list.h"
extern LIST * list_cons(void * data, LIST * root);
# 31 "my_list.h"
extern LIST * list_delete(LIST * root, LIST * element);
# 34 "my_list.h"
extern void list_free(LIST * root, unsigned int);
# 35 "my_list.h"
extern unsigned int list_length(LIST *);
# 33 "my_list.h"
extern LIST * list_reverse(LIST * root);
# 36 "my_list.h"
extern int list_walk(LIST *, list_walk_action, unsigned char * argument);
# 455 "drizzle_com.h"
extern void make_password_from_salt(char * to, unsigned char const * hash_stage2);
# 448 "drizzle_com.h"
extern void make_password_from_salt_323(char * to, unsigned long int const * salt);
# 450 "drizzle_com.h"
extern void make_scrambled_password(char * to, char const * password);
# 33 "typelib.h"
extern void make_type(char * to, unsigned int, TYPELIB * typelib);
# 377 "drizzle_com.h"
extern int my_connect(my_socket, struct sockaddr const * name, unsigned int, unsigned int);
# 358 "drizzle_com.h"
extern my_bool my_net_init(NET * net, Vio * vio);
# 359 "drizzle_com.h"
extern void my_net_local_init(NET * net);
# 369 "drizzle_com.h"
extern unsigned long int my_net_read(NET * net);
# 364 "drizzle_com.h"
extern my_bool my_net_write(NET * net, unsigned char const * packet, size_t);
# 439 "drizzle_com.h"
extern double my_rnd(struct rand_struct *);
# 466 "drizzle_com.h"
extern void my_thread_end(void);
# 465 "drizzle_com.h"
extern my_bool my_thread_init(void);
# 460 "drizzle.h"
extern void myodbc_remove_escape(DRIZZLE * mysql, char * name);
# 362 "drizzle.h"
extern my_ulonglong drizzle_affected_rows(DRIZZLE * mysql);
# 714 "drizzle.h"
extern my_bool drizzle_autocommit(DRIZZLE * mysql, my_bool);
# 378 "drizzle.h"
extern my_bool drizzle_change_user(DRIZZLE * mysql, char const * user, char const * passwd, char const * db);
# 370 "drizzle.h"
extern char const * drizzle_character_set_name(DRIZZLE * mysql);
# 717 "drizzle.h"
extern void drizzle_close(DRIZZLE * sock);
# 712 "drizzle.h"
extern my_bool drizzle_commit(DRIZZLE * mysql);
# 441 "drizzle.h"
extern void DRIZZLE_DATA_seek(DRIZZLE_RES * result, my_ulonglong);
# 420 "drizzle.h"
extern int drizzle_dump_debug_info(DRIZZLE * mysql);
# 462 "drizzle.h"
extern my_bool drizzle_embedded(void);
# 354 "drizzle.h"
extern my_bool drizzle_eof(DRIZZLE_RES * res);
# 364 "drizzle.h"
extern unsigned int drizzle_errno(DRIZZLE * mysql);
# 461 "drizzle_com.h"
extern char const * drizzle_errno_to_sqlstate(unsigned int);
# 365 "drizzle.h"
extern char const * drizzle_error(DRIZZLE * mysql);
# 452 "drizzle.h"
extern unsigned long int drizzle_escape_string(char * to, char const * from, unsigned long int);
# 449 "drizzle.h"
extern DRIZZLE_FIELD * drizzle_fetch_field(DRIZZLE_RES * result);
# 355 "drizzle.h"
extern DRIZZLE_FIELD * drizzle_fetch_field_direct(DRIZZLE_RES * res, unsigned int);
# 357 "drizzle.h"
extern DRIZZLE_FIELD * drizzle_fetch_fields(DRIZZLE_RES * res);
# 448 "drizzle.h"
extern unsigned long int * drizzle_fetch_lengths(DRIZZLE_RES * result);
# 447 "drizzle.h"
extern DRIZZLE_ROW drizzle_fetch_row(DRIZZLE_RES * result);
# 361 "drizzle.h"
extern unsigned int DRIZZLE_FIELD_count(DRIZZLE * mysql);
# 445 "drizzle.h"
extern DRIZZLE_FIELD_OFFSET DRIZZLE_FIELD_seek(DRIZZLE_RES * result, DRIZZLE_FIELD_OFFSET);
# 359 "drizzle.h"
extern DRIZZLE_FIELD_OFFSET DRIZZLE_FIELD_tell(DRIZZLE_RES * res);
# 440 "drizzle.h"
extern void drizzle_free_result(DRIZZLE_RES * result);
# 396 "drizzle.h"
extern void drizzle_get_character_set_info(DRIZZLE * mysql, MY_CHARSET_INFO * charset);
# 430 "drizzle.h"
extern char const * drizzle_get_client_info(void);
# 431 "drizzle.h"
extern unsigned long int drizzle_get_client_version(void);
# 432 "drizzle.h"
extern char const * drizzle_get_host_info(DRIZZLE * mysql);
# 336 "drizzle.h"
extern DRIZZLE_PARAMETERS * drizzle_get_parameters(void);
# 434 "drizzle.h"
extern unsigned int drizzle_get_proto_info(DRIZZLE * mysql);
# 429 "drizzle.h"
extern char const * drizzle_get_server_info(DRIZZLE * mysql);
# 433 "drizzle.h"
extern unsigned long int drizzle_get_server_version(DRIZZLE * mysql);
# 377 "drizzle.h"
extern char const * drizzle_get_ssl_cipher(DRIZZLE * mysql);
# 454 "drizzle.h"
extern unsigned long int drizzle_hex_string(char * to, char const * from, unsigned long int);
# 368 "drizzle.h"
extern char const * drizzle_info(DRIZZLE * mysql);
# 373 "drizzle.h"
extern DRIZZLE * drizzle_init(DRIZZLE * mysql);
# 363 "drizzle.h"
extern my_ulonglong drizzle_insert_id(DRIZZLE * mysql);
# 423 "drizzle.h"
extern int drizzle_kill(DRIZZLE * mysql, unsigned long int);
# 435 "drizzle.h"
extern DRIZZLE_RES * drizzle_list_dbs(DRIZZLE * mysql, char const * wild);
# 450 "drizzle.h"
extern DRIZZLE_RES * drizzle_list_fields(DRIZZLE * mysql, char const * table, char const * wild);
# 437 "drizzle.h"
extern DRIZZLE_RES * drizzle_list_processes(DRIZZLE * mysql);
# 436 "drizzle.h"
extern DRIZZLE_RES * drizzle_list_tables(DRIZZLE * mysql, char const * wild);
# 715 "drizzle.h"
extern my_bool drizzle_more_results(DRIZZLE * mysql);
# 716 "drizzle.h"
extern int drizzle_next_result(DRIZZLE * mysql);
# 353 "drizzle.h"
extern unsigned int drizzle_num_fields(DRIZZLE_RES * res);
# 352 "drizzle.h"
extern my_ulonglong drizzle_num_rows(DRIZZLE_RES * res);
# 438 "drizzle.h"
extern int drizzle_options(DRIZZLE * mysql, enum mysql_option, void const * arg);
# 427 "drizzle.h"
extern int drizzle_ping(DRIZZLE * mysql);
# 76 "drizzle.h"
extern unsigned int mysql_port;
# 388 "drizzle.h"
extern int drizzle_query(DRIZZLE * mysql, char const * q);
# 790 "mysql/plugin.h"
extern void drizzle_query_cache_invalidate4(void * thd, char const * key, unsigned int, int);
# 463 "drizzle.h"
extern my_bool drizzle_read_query_result(DRIZZLE * mysql);
# 380 "drizzle.h"
extern DRIZZLE * drizzle_connect(DRIZZLE * mysql, char const * host, char const * user, char const * passwd, char const * db, unsigned int, char const * unix_socket, unsigned long int);
# 456 "drizzle.h"
extern unsigned long int drizzle_real_escape_string(DRIZZLE * mysql, char * to, char const * from, unsigned long int);
# 391 "drizzle.h"
extern int drizzle_real_query(DRIZZLE * mysql, char const * q, unsigned long int);
# 421 "drizzle.h"
extern int drizzle_refresh(DRIZZLE * mysql, unsigned int);
# 713 "drizzle.h"
extern my_bool drizzle_rollback(DRIZZLE * mysql);
# 443 "drizzle.h"
extern DRIZZLE_ROW_OFFSET DRIZZLE_ROW_seek(DRIZZLE_RES * result, DRIZZLE_ROW_OFFSET);
# 358 "drizzle.h"
extern DRIZZLE_ROW_OFFSET DRIZZLE_ROW_tell(DRIZZLE_RES * res);
# 387 "drizzle.h"
extern int drizzle_select_db(DRIZZLE * mysql, char const * db);
# 389 "drizzle.h"
extern int drizzle_send_query(DRIZZLE * mysql, char const * q, unsigned long int);
# 322 "drizzle.h"
extern void drizzle_server_end(void);
# 321 "drizzle.h"
extern int drizzle_server_init(int, char * * argv, char * * groups);
# 371 "drizzle.h"
extern int drizzle_set_character_set(DRIZZLE * mysql, char const * csname);
# 414 "drizzle.h"
extern void drizzle_set_local_infile_default(DRIZZLE * mysql);
# 403 "drizzle.h"
extern void drizzle_set_local_infile_handler(DRIZZLE * mysql, int (* local_infile_init)(void * *, char const *, void *), int (* local_infile_read)(void *, char *, unsigned int), void (* local_infile_end)(void), int (* local_infile_error)(void *, char *, unsigned int), void *);
# 424 "drizzle.h"
extern int drizzle_set_server_option(DRIZZLE * mysql, enum enum_drizzle_set_option);
# 417 "drizzle.h"
extern int drizzle_shutdown(DRIZZLE * mysql, enum drizzle_enum_shutdown_level);
# 366 "drizzle.h"
extern char const * drizzle_sqlstate(DRIZZLE * mysql);
# 374 "drizzle.h"
extern my_bool drizzle_ssl_set(DRIZZLE * mysql, char const * key, char const * cert, char const * ca, char const * capath, char const * cipher);
# 428 "drizzle.h"
extern char const * drizzle_stat(DRIZZLE * mysql);
# 708 "drizzle.h"
extern my_ulonglong mysql_stmt_affected_rows(MYSQL_STMT * stmt);
# 686 "drizzle.h"
extern my_bool mysql_stmt_attr_get(MYSQL_STMT * stmt, enum enum_stmt_attr_type, void * attr);
# 683 "drizzle.h"
extern my_bool mysql_stmt_attr_set(MYSQL_STMT * stmt, enum enum_stmt_attr_type, void const * attr);
# 689 "drizzle.h"
extern my_bool mysql_stmt_bind_param(MYSQL_STMT * stmt, MYSQL_BIND * bnd);
# 690 "drizzle.h"
extern my_bool mysql_stmt_bind_result(MYSQL_STMT * stmt, MYSQL_BIND * bnd);
# 691 "drizzle.h"
extern my_bool mysql_stmt_close(MYSQL_STMT * stmt);
# 706 "drizzle.h"
extern void mysql_stmt_data_seek(MYSQL_STMT * stmt, my_ulonglong);
# 700 "drizzle.h"
extern unsigned int mysql_stmt_errno(MYSQL_STMT * stmt);
# 701 "drizzle.h"
extern char const * mysql_stmt_error(MYSQL_STMT * stmt);
# 676 "drizzle.h"
extern int mysql_stmt_execute(MYSQL_STMT * stmt);
# 677 "drizzle.h"
extern int mysql_stmt_fetch(MYSQL_STMT * stmt);
# 678 "drizzle.h"
extern int mysql_stmt_fetch_column(MYSQL_STMT * stmt, MYSQL_BIND * bind_arg, unsigned int, unsigned long int);
# 710 "drizzle.h"
extern unsigned int mysql_stmt_field_count(MYSQL_STMT * stmt);
# 693 "drizzle.h"
extern my_bool mysql_stmt_free_result(MYSQL_STMT * stmt);
# 673 "drizzle.h"
extern MYSQL_STMT * mysql_stmt_init(DRIZZLE * mysql);
# 709 "drizzle.h"
extern my_ulonglong mysql_stmt_insert_id(MYSQL_STMT * stmt);
# 707 "drizzle.h"
extern my_ulonglong mysql_stmt_num_rows(MYSQL_STMT * stmt);
# 682 "drizzle.h"
extern unsigned long int mysql_stmt_param_count(MYSQL_STMT * stmt);
# 699 "drizzle.h"
extern DRIZZLE_RES * mysql_stmt_param_metadata(MYSQL_STMT * stmt);
# 674 "drizzle.h"
extern int mysql_stmt_prepare(MYSQL_STMT * stmt, char const * query, unsigned long int);
# 692 "drizzle.h"
extern my_bool mysql_stmt_reset(MYSQL_STMT * stmt);
# 698 "drizzle.h"
extern DRIZZLE_RES * mysql_stmt_result_metadata(MYSQL_STMT * stmt);
# 703 "drizzle.h"
extern DRIZZLE_ROW_OFFSET mysql_stmt_row_seek(MYSQL_STMT * stmt, DRIZZLE_ROW_OFFSET);
# 705 "drizzle.h"
extern DRIZZLE_ROW_OFFSET mysql_stmt_row_tell(MYSQL_STMT * stmt);
# 694 "drizzle.h"
extern my_bool mysql_stmt_send_long_data(MYSQL_STMT * stmt, unsigned int, char const * data, unsigned long int);
# 702 "drizzle.h"
extern char const * mysql_stmt_sqlstate(MYSQL_STMT * stmt);
# 681 "drizzle.h"
extern int mysql_stmt_store_result(MYSQL_STMT * stmt);
# 393 "drizzle.h"
extern DRIZZLE_RES * drizzle_store_result(DRIZZLE * mysql);
# 345 "drizzle.h"
extern void drizzle_thread_end(void);
# 369 "drizzle.h"
extern unsigned long int drizzle_thread_id(DRIZZLE * mysql);
# 344 "drizzle.h"
extern my_bool drizzle_thread_init(void);
# 461 "drizzle.h"
extern unsigned int drizzle_thread_safe(void);
# 699 "mysql/plugin.h"
extern int mysql_tmpfile(char const * prefix);
# 77 "drizzle.h"
extern char * mysql_unix_port;
# 394 "drizzle.h"
extern DRIZZLE_RES * drizzle_use_result(DRIZZLE * mysql);
# 367 "drizzle.h"
extern unsigned int drizzle_warning_count(DRIZZLE * mysql);
# 361 "drizzle_com.h"
extern void net_clear(NET * net, my_bool);
# 360 "drizzle_com.h"
extern void net_end(NET * net);
# 363 "drizzle_com.h"
extern my_bool net_flush(NET * net);
# 368 "drizzle_com.h"
extern int net_real_write(NET * net, unsigned char const * packet, size_t);
# 362 "drizzle_com.h"
extern my_bool net_realloc(NET * net, size_t);
# 365 "drizzle_com.h"
extern my_bool net_write_command(NET * net, unsigned char, unsigned char const * header, size_t, unsigned char const * packet, size_t);
# 456 "drizzle_com.h"
extern char * octet2hex(char * to, char const * str, unsigned int);
# 437 "drizzle_com.h"
extern void randominit(struct rand_struct *, unsigned long int, unsigned long int);
# 451 "drizzle_com.h"
extern void scramble(char * to, char const * message, char const * password);
# 444 "drizzle_com.h"
extern void scramble_323(char * to, char const * message, char const * password);
# 37 "typelib.h"
extern TYPELIB sql_protocol_typelib;
# 739 "mysql/plugin.h"
extern void * thd_alloc(void * thd, unsigned int);
# 743 "mysql/plugin.h"
extern void * thd_calloc(void * thd, unsigned int);
# 724 "mysql/plugin.h"
extern unsigned long int thd_get_thread_id(void const * thd);
# 780 "mysql/plugin.h"
extern void thd_get_xid(void const * thd, MYSQL_XID * xid);
# 680 "mysql/plugin.h"
extern void * * thd_ha_data(void const * thd, struct handlerton const * hton);
# 675 "mysql/plugin.h"
extern int thd_in_lock_tables(void const * thd);
# 685 "mysql/plugin.h"
extern void thd_inc_row_count(void);
# 715 "mysql/plugin.h"
extern int thd_killed(void const * thd);
# 770 "mysql/plugin.h"
extern MYSQL_LEX_STRING * thd_make_lex_string(void * thd, MYSQL_LEX_STRING * lex_str, char const * str, unsigned int, int);
# 755 "mysql/plugin.h"
extern void * thd_memdup(void * thd, void const * str, unsigned int);
# 679 "mysql/plugin.h"
extern char const * thd_proc_info(void * thd, char const * info);
# 682 "mysql/plugin.h"
extern char * thd_security_context(void * thd, char * buffer, unsigned int, unsigned int);
# 678 "mysql/plugin.h"
extern int thd_sql_command(void const * thd);
# 747 "mysql/plugin.h"
extern char * thd_strdup(void * thd, char const * str);
# 751 "mysql/plugin.h"
extern char * thd_strmake(void * thd, char const * str, unsigned int);
# 676 "mysql/plugin.h"
extern int thd_tablespace_op(void const * thd);
# 677 "mysql/plugin.h"
extern long long int thd_test_options(void const * thd, long long int);
# 681 "mysql/plugin.h"
extern int thd_tx_isolation(void const * thd);
