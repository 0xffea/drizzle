--- innobackup-1.5.1_orig	2009-03-04 21:41:35.000000000 +0900
+++ innobackupex-1.5.1	2009-03-12 12:20:15.000000000 +0900
@@ -8,6 +8,7 @@
 
 use strict;
 use Getopt::Long;
+use File::Spec;
 use POSIX "strftime";
 use POSIX ":sys_wait_h";
 use POSIX "tmpnam";
@@ -15,7 +16,7 @@
 
 
 # version of this script
-my $innobackup_version = '1.5.1';
+my $innobackup_version = '1.5.1-xtrabackup';
 
 # copyright notice
 my $copyright_notice = 
@@ -64,6 +65,7 @@
 my $option_copy_back = '';
 my $option_include = '';
 my $option_databases = '';
+my $option_throttle = '';
 my $option_sleep = '';
 my $option_compress = 999;
 my $option_uncompress = '';
@@ -74,10 +76,13 @@
 my $option_mysql_socket = '';
 my $option_no_timestamp = '';
 my $option_slave_info = '';
-my $option_ibbackup_binary = 'ibbackup';
+my $option_ibbackup_binary = 'xtrabackup';
+
+my $option_incremental = '';
+my $option_remote_host = '';
 
 # name of the my.cnf configuration file
-my $config_file = '';
+#my $config_file = '';
 
 # root of the backup directory
 my $backup_root = '';
@@ -88,6 +93,9 @@
 # name of the ibbackup suspend-at-end file
 my $suspend_file = '';
 
+# name of the temporary transaction log file during the backup
+my $tmp_logfile = '';
+
 # home directory of innoDB log files
 my $innodb_log_group_home_dir = '';
 
@@ -98,13 +106,13 @@
 my %config;
 
 # options from the backup options file
-my %backup_config;
+#my %backup_config;
 
 # list of databases to be included in a backup
 my %databases_list;
 
 # prefix for output lines
-my $prefix = 'innobackup:';
+my $prefix = 'innobackupex:';
 
 # process id of mysql client program (runs as a child process of this script)
 my $mysql_pid = '';
@@ -212,10 +220,10 @@
 innobackup [--sleep=MS] [--compress[=LEVEL]] [--include=REGEXP] [--user=NAME] 
            [--password=WORD] [--port=PORT] [--socket=SOCKET] [--no-timestamp] 
            [--ibbackup=IBBACKUP-BINARY] [--slave-info]
-           [--databases=LIST] MY.CNF BACKUP-ROOT-DIR
+           [--databases=LIST] [--remote-host=HOSTNAME] BACKUP-ROOT-DIR
 innobackup --apply-log [--use-memory=MB] [--uncompress] 
-           [--ibbackup=IBBACKUP-BINARY] MY.CNF BACKUP-DIR
-innobackup --copy-back MY.CNF BACKUP-DIR
+           [--ibbackup=IBBACKUP-BINARY] BACKUP-DIR
+innobackup --copy-back BACKUP-DIR
 
 The first command line above makes a hot backup of a MySQL database.
 By default it creates a backup directory (named by the current date
@@ -261,18 +269,28 @@
     --copy-back Copy data and index files from backup directory back to 
                 their original locations.
 
+    --remote-host=HOSTNAME
+                If this option is specified, backup files will be created
+                at the remote host by using ssh connection.
+
     --use-memory=MB
                 This option is passed to the ibbackup child process.
                 It tells ibbackup that it can use MB megabytes of 
                 memory in restoration.
                 Try 'ibbackup --help' for more details on this option.
 
+    --throttle=IOS
+                This option is passed to the xtrabackup child process.
+                It limits count of IO operations (pairs of read&write) per
+                second to IOS values (for '--backup')
+
     --sleep=MS  This option is passed to the ibbackup child process.
                 It instructs the ibbackup program to sleep 
                 MS milliseconds after each 1 MB of copied data.
                 You can use this parameter to tune the additional 
                 disk i/o load the ibbackup program causes on the computer.
                 Try 'ibbackup --help' for more details on this option.
+                ** it is not supported by xtrabackup **
 
     --compress[=LEVEL]
                 This option is passed to the ibbackup child process.
@@ -283,6 +301,7 @@
                 9 gives best compression, and 0 means no compression. 
                 If compression level is not given, the default level 1 is used.
                 Try 'ibbackup --help' for more details on this option.
+                ** it is not supported by xtrabackup yet **
 
     --include=REGEXP 
                 This option is passed to the ibbackup child process.
@@ -295,6 +314,7 @@
                 included in the backup. The regular expression should
                 be of the POSIX 1003.2 "extended" form.  
                 Try 'ibbackup --help' for more details on this option.
+                ** it is not supported by xtrabackup yet **
 
     --databases=LIST
                 This option is used to specify the list of databases that
@@ -312,6 +332,7 @@
                 This option is passed to the ibbackup child process.
                 It tells ibbackup to uncompress compressed InnoDB data files.
                 Try 'ibbackup --help' for more details on this option.
+                ** it is not supported by xtrabackup yet **
                 
     --user=NAME This option is passed to the mysql child process.
                 It defines the user for database login if not current user.
@@ -408,7 +429,9 @@
     start_ibbackup();
 
     # wait for ibbackup to suspend itself
-    wait_for_ibbackup_suspend();
+    if (!$option_remote_host) {
+        wait_for_ibbackup_suspend();
+    }
 
     # connect to database
     mysql_open();
@@ -429,6 +452,11 @@
     # disconnect from database
     mysql_close();
 
+    if ($option_remote_host) {
+        system("scp -Cp -c arcfour '$tmp_logfile' '$option_remote_host:$backup_dir/xtrabackup_logfile'")
+            and Die "Failed to scp file '$option_remote_host:$backup_dir/xtrabackup_logfile': $!";
+    }
+
     print "\n$prefix Backup created in directory '$backup_dir'\n";
     if ($mysql_binlog_position) {
         print "$prefix MySQL binlog position: $mysql_binlog_position\n";
@@ -504,7 +532,7 @@
     my $orig_iblog_dir =
         get_option(\%config, 'mysqld', 'innodb_log_group_home_dir');
     my $excluded_files = 
-        '^(\.\.?|backup-my\.cnf|ibbackup_logfile|mysql-std(err|out)|.*\.ibz)$';
+        '^(\.\.?|backup-my\.cnf|xtrabackup_logfile|mysql-std(err|out)|.*\.ibz)$';
     my @ibdata_files;
     my $iblog_files = '^ib_logfile.*$';
     my $compressed_data_file = '.*\.ibz$';
@@ -526,17 +554,17 @@
 
     # check that the original options file and the backup options file have
     # the same value for "innodb_data_file_path" option
-    $backup_innodb_data_file_path = 
-        get_option(\%backup_config, 'mysqld', 'innodb_data_file_path');
-    if (!are_equal_innodb_data_file_paths($orig_innodb_data_file_path, 
-                                          $backup_innodb_data_file_path)
-    ) {
-        Die "The value of 'innodb_data_file_path' option in the original "
-          . "my.cnf file '$config_file' is different from the value "
-          . "in the backup my.cnf file '$backup_config_file'.\n(original: "
-          . "'$orig_innodb_data_file_path')\n"
-          . "(backup:   '$backup_innodb_data_file_path')";
-    }
+    #$backup_innodb_data_file_path = 
+    #    get_option(\%backup_config, 'mysqld', 'innodb_data_file_path');
+    #if (!are_equal_innodb_data_file_paths($orig_innodb_data_file_path, 
+    #                                      $backup_innodb_data_file_path)
+    #) {
+    #    Die "The value of 'innodb_data_file_path' option in the original "
+    #      . "my.cnf file '$config_file' is different from the value "
+    #      . "in the backup my.cnf file '$backup_config_file'.\n(original: "
+    #      . "'$orig_innodb_data_file_path')\n"
+    #      . "(backup:   '$backup_innodb_data_file_path')";
+    #}
 
     # make a list of all ibdata files in the backup directory and all
     # directories in the backup directory under which there are ibdata files
@@ -640,17 +668,19 @@
 sub apply_log {
     my $rcode;
     my $cmdline = '';
-    my $options = '--restore';
+    my $options = '--prepare';
+
+    $options = $options . " --target-dir=$backup_dir";
 
     if ($option_uncompress) {
         $options = $options . ' --uncompress';
     }
     if ($option_use_memory) {
-        $options = $options . " --use-memory $option_use_memory";
+        $options = $options . " --use-memory=$option_use_memory";
     }
 
     # run ibbackup as a child process
-    $cmdline = "$option_ibbackup_binary $options $backup_dir/backup-my.cnf";
+    $cmdline = "$option_ibbackup_binary $options";
     $now = current_time();
     print "\n$now  $prefix Starting ibbackup with command: $cmdline\n\n";
     $rcode = system("$cmdline");
@@ -658,6 +688,14 @@
         # failure
         Die "\n$prefix ibbackup failed";
     }
+
+    $now = current_time();
+    print "\n$now  $prefix Restarting xtrabackup with command: $cmdline\nfor creating ib_logfile*\n\n";
+    $rcode = system("$cmdline");
+    if ($rcode) {
+        # failure
+        Die "\n$prefix xtrabackup (2nd execution) failed";
+    }
 }
 
 
@@ -702,25 +740,34 @@
 # program for backing up InnoDB tables and indexes.
 #
 sub start_ibbackup {
-    my $options = '--suspend-at-end';
+    my $options = '--backup --suspend-at-end';
     my $cmdline = '';
     my $pid = undef;
 
+    if (!$option_remote_host) {
+        $options = $options . " --target-dir=$backup_dir";
+    } else {
+        #(datadir) for 'xtrabackup_suspended' only
+        $options = $options . " --log-stream --target-dir=./";
+    }
+
     # prepare command line for running ibbackup
+    if ($option_throttle) {
+        $options = $options . " --throttle=$option_throttle";
+    }
     if ($option_sleep) {
-        $options = $options . " --sleep $option_sleep";
+        $options = $options . " --sleep=$option_sleep";
     }
     if ($option_compress) {
-        $options = $options . " --compress $option_compress";
+        $options = $options . " --compress=$option_compress";
     }
     if ($option_use_memory) {
-        $options = $options . " --use-memory $option_use_memory";
+        $options = $options . " --use-memory=$option_use_memory";
     }
     if ($option_include) {
-        $options = $options . " --include '$option_include'";
+        $options = $options . " --tables='$option_include'";
     }
-    $cmdline = "$option_ibbackup_binary $options $config_file "
-        ."$backup_config_file";
+    $cmdline = "$option_ibbackup_binary $options";
 
     # run ibbackup as a child process
     $now = current_time();
@@ -729,7 +776,77 @@
         if ($pid) {
             # parent process
             $ibbackup_pid = $pid;
+
+            if($option_remote_host) {
+                #direct copy to remote
+                my $orig_datadir = get_option(\%config, 'mysqld', 'datadir');
+                my $orig_ibdata_dir =
+                    get_option(\%config, 'mysqld', 'innodb_data_home_dir');
+                my $orig_innodb_data_file_path =
+                    get_option(\%config, 'mysqld', 'innodb_data_file_path');
+                my $subdir;
+                my @list;
+
+                if (system("ssh $option_remote_host test -e $backup_dir/ib_logfile0")
+                        == 0) {
+                    print "$prefix Remove $option_remote_host:$backup_dir/ib_logfile*\n";
+                    system("ssh $option_remote_host rm $backup_dir/ib_logfile\*")
+                        and Die "Failed to rm file '$backup_dir/ib_logfile*': $!";
+                }
+
+                wait_for_ibbackup_suspend();
+
+                #InnoDB data files from original InnoDB data directory
+                print "\n$prefix Starting to scp InnoDB tables and indexes\n";
+                print "$prefix to '$backup_dir'\n";
+                print "$prefix from original InnoDB data directory '$orig_ibdata_dir'\n";
+                foreach my $a (split(/;/, $orig_innodb_data_file_path)) {
+                    my $path = (split(/:/,$a))[0];
+                    print "$prefix Backing up file '$orig_ibdata_dir/$path'\n";
+                    system("scp -Cp -c arcfour '$orig_ibdata_dir/$path' '$option_remote_host:$backup_dir/$path'")
+                        and Die "Failed to scp file '$path': $!";
+                }
+
+                #copy *.ibd files
+                opendir(DIR, $orig_datadir)
+                    || Die "Can't open directory '$orig_datadir': $!\n";
+                while (defined($subdir = readdir(DIR))) {
+                    my $print_each_file = 0;
+                    my $file_c;
+                    my $file;
+                    if ($subdir eq '.' || $subdir eq '..') { next; }
+                    next unless -d "$orig_datadir/$subdir";
+                    next unless check_if_required($subdir);
+
+                    @list = glob("$orig_datadir/$subdir/" . '*.ibd');
+
+                    $file_c = @list;
+                    if ($file_c <= $backup_file_print_limit) {
+                        $print_each_file = 1;
+                    } else {
+                        print "$prefix Backing up files " .
+                            "'$orig_datadir/$subdir/*.ibd' ($file_c files)\n";
+                    }
+                    foreach $file (@list) {
+                        if ($print_each_file) {
+                            print "$prefix Backing up file '$file'\n";
+                        }
+                        if (system("ssh $option_remote_host test -e $backup_dir/$subdir")
+                                != 0) {
+                            system("ssh $option_remote_host mkdir $backup_dir/$subdir");
+                        }
+                        system("scp -Cp -c arcfour '$file' '$option_remote_host:$backup_dir/$subdir/'")
+                            and Die "Failed to scp file '$file': $!";
+                    }
+                }
+                closedir(DIR);
+            }
         } else {
+            if($option_remote_host) {
+                open(STDOUT, "> $tmp_logfile")
+                || Die "Failed to open file '$tmp_logfile': $!"
+            }
+
             # child process
             exec($cmdline) || Die "Failed to exec ibbackup: $!";
         }
@@ -897,8 +1014,13 @@
     if (!defined $info_lines[1]) {
         $info_lines[1] = "";
     }
-    open(FILE, ">$binlog_info") || 
-        Die "Failed to open file '$binlog_info': $!";
+    if (!$option_remote_host) {
+        open(FILE, ">$binlog_info") || 
+            Die "Failed to open file '$binlog_info': $!";
+    } else {
+        open(FILE, "| ssh $option_remote_host 'cat > $binlog_info'") ||
+            Die "Failed to open file '$option_remote_host:$binlog_info': $!";
+    }
     print FILE  "$info_lines[1]\n";
     close(FILE);
 
@@ -939,8 +1061,13 @@
     }
 
     # print slave status to a file
-    open(FILE, ">$slave_info") || 
-        Die "Failed to open file '$slave_info': $!";
+    if (!$option_remote_host) {
+        open(FILE, ">$slave_info") || 
+            Die "Failed to open file '$slave_info': $!";
+    } else {
+        open(FILE, "| ssh $option_remote_host 'cat > $slave_info'") ||
+            Die "Failed to open file '$option_remote_host:$slave_info': $!";
+    }
     print FILE  "CHANGE MASTER TO MASTER_LOG_FILE='$filename', MASTER_LOG_POS=$position\n";
     close(FILE);
 
@@ -1174,8 +1301,8 @@
             $mysql_server_version = $lines[1];
             print "$prefix Using mysql server version $mysql_server_version\n";
         }
-        require_external($option_ibbackup_binary, '--license', 
-                         'version (\S+)', \$ibbackup_version);
+        #require_external($option_ibbackup_binary, '--license', 
+        #                 'version (\S+)', \$ibbackup_version);
         print "\n";
         
         if ($option_include 
@@ -1193,26 +1320,41 @@
     $SIG{PIPE} = \&catch_sigpipe;
 
     # read MySQL options file
-    read_config_file($config_file, \%config);
+    #read_config_file($config_file, \%config);
+    read_config_file(\%config);
 
     # get innodb log home directory from options file
-    $innodb_log_group_home_dir = 
-        get_option(\%config, 'mysqld', 'innodb_log_group_home_dir');
+    #$innodb_log_group_home_dir = 
+    #    get_option(\%config, 'mysqld', 'innodb_log_group_home_dir');
 
     if (!$option_apply_log && !$option_copy_back) {
         # we are making a backup, create a new backup directory
-        $backup_dir = make_backup_dir();
+        if (!$option_remote_host) {
+            $backup_dir = File::Spec->rel2abs(make_backup_dir());
+        } else {
+            $backup_dir = make_backup_dir();
+        }
         print "$prefix Created backup directory $backup_dir\n";
+        if (!$option_remote_host) {
         $backup_config_file = $backup_dir . '/backup-my.cnf';
-        write_backup_config_file($backup_config_file);
-        $suspend_file = $backup_dir . '/ibbackup_suspended';
+        $suspend_file = $backup_dir . '/xtrabackup_suspended';
         $mysql_stdout = $backup_dir . '/mysql-stdout';
         $mysql_stderr = $backup_dir . '/mysql-stderr';
-        $binlog_info = $backup_dir . '/ibbackup_binlog_info';
-        $slave_info = $backup_dir . '/ibbackup_slave_info';
-    } elsif ($option_copy_back) {
+        $binlog_info = $backup_dir . '/xtrabackup_binlog_info';
+        $slave_info = $backup_dir . '/xtrabackup_slave_info';
+        } else {
         $backup_config_file = $backup_dir . '/backup-my.cnf';
-        read_config_file($backup_config_file, \%backup_config);
+        $suspend_file = get_option(\%config, 'mysqld', 'datadir') . '/xtrabackup_suspended';
+        $tmp_logfile = get_option(\%config, 'mysqld', 'datadir') . '/xtrabackup_logfile';
+        $mysql_stdout = '/tmp/mysql-stdout';
+        $mysql_stderr = '/tmp/mysql-stderr';
+        $binlog_info = $backup_dir . '/xtrabackup_binlog_info';
+        $slave_info = $backup_dir . '/xtrabackup_slave_info';
+        }
+        write_backup_config_file($backup_config_file);
+    } elsif ($option_copy_back) {
+        #$backup_config_file = $backup_dir . '/backup-my.cnf';
+        #read_config_file($backup_config_file, \%backup_config);
     }         
 }
 
@@ -1232,15 +1374,24 @@
         get_option(\%config, 'mysqld', 'innodb_log_files_in_group');
     my $innodb_log_file_size =
         get_option(\%config, 'mysqld', 'innodb_log_file_size');
+    my $root;
+
+    if (!$option_remote_host) {
+        $root = $backup_dir;
+        open(FILE, "> $filename") || Die "Failed to open file '$filename': $!";
+    } else {
+        $root = `ssh $option_remote_host 'cd $backup_dir; pwd'`;
+        open(FILE, "| ssh $option_remote_host 'cat > $filename'")
+            || Die "Failed to open file '$option_remote_host:$filename': $!";
+    }
 
-    open(FILE, "> $filename") || Die "Failed to open file '$filename': $!";
     print FILE "# This MySQL options file was generated by innobackup.\n\n" .
           "# The MySQL server\n" .
           "[mysqld]\n" .
-          "datadir=$backup_dir\n" .
-          "innodb_data_home_dir=$backup_dir\n" .
+          "datadir=$root\n" .
+          "innodb_data_home_dir=$root\n" .
           "innodb_data_file_path=$innodb_data_file_path\n" .
-          "innodb_log_group_home_dir=$backup_dir\n" .
+          "innodb_log_group_home_dir=$root\n" .
           "innodb_log_files_in_group=$innodb_log_files_in_group\n" .
           "innodb_log_file_size=$innodb_log_file_size\n";
     close(FILE);
@@ -1290,12 +1441,13 @@
     $rcode = GetOptions('compress:i' => \$option_compress,
                         'help' => \$option_help,
                         'version' => \$option_version,
+                        'throttle=i' => \$option_throttle,
                         'sleep=i' => \$option_sleep,
                         'apply-log' => \$option_apply_log,
                         'copy-back' => \$option_copy_back,
                         'include=s' => \$option_include,
 			'databases=s' => \$option_databases,
-                        'use-memory=i' => \$option_use_memory,
+                        'use-memory=s' => \$option_use_memory,
                         'uncompress' => \$option_uncompress,
                         'password=s' => \$option_mysql_password,
                         'user=s' => \$option_mysql_user,
@@ -1303,6 +1455,8 @@
                         'slave-info' => \$option_slave_info,
                         'socket=s' => \$option_mysql_socket,
                         'no-timestamp' => \$option_no_timestamp,
+                        'incremental' => \$option_incremental,
+                        'remote-host=s' => \$option_remote_host,
                         'ibbackup=s' => \$option_ibbackup_binary);
     if (!$rcode) {
         # failed to read options
@@ -1331,25 +1485,29 @@
 	$option_compress = 0;
     }
 
-    if (@ARGV < 2) {
+    if (@ARGV < 1) {
         print "$prefix Missing command line argument\n";
         usage();
         exit(1);
-    } elsif (@ARGV > 2) {
+    } elsif (@ARGV > 1) {
         print "$prefix Too many command line arguments\n";
         usage();
         exit(1);
     }
 
     # get options file name
-    $config_file = $ARGV[0];
+    #$config_file = $ARGV[0];
 
     if (!$option_apply_log && !$option_copy_back) {
         # we are making a backup, get backup root directory
-        $backup_root = $ARGV[1];
+        $backup_root = $ARGV[0];
+        if ($option_incremental) {
+            print "incremental backup is not supported for now.\n";
+            exit(1);
+        }
     } else {
         # get backup directory
-        $backup_dir = $ARGV[1];
+        $backup_dir = File::Spec->rel2abs($ARGV[0]);
     }        
 
     print "\n";
@@ -1371,7 +1529,11 @@
     $dir = $backup_root;
     $dir .= '/' . strftime("%Y-%m-%d_%H-%M-%S", localtime())
        unless $option_no_timestamp;
-    mkdir($dir, 0777) || Die "Failed to create backup directory $dir: $!";
+    if (!$option_remote_host) {
+        mkdir($dir, 0777) || Die "Failed to create backup directory $dir: $!";
+    } else {
+        system("ssh $option_remote_host mkdir $dir");
+    }
 
     # create subdirectories for ibdata files if needed
     foreach my $a (split(/;/, $innodb_data_file_path)) {
@@ -1407,9 +1569,15 @@
     $path = $root;
     foreach $a (@{$relative_path}) {
         $path = $path . "/" . $a;
-        if (! -d $path) {
-            # this directory does not exist, create it !
-            mkdir($path, 0777) || Die "Failed to create backup directory: $!";
+        if (!$option_remote_host) {
+            if (! -d $path) {
+                # this directory does not exist, create it !
+                mkdir($path, 0777) || Die "Failed to create backup directory: $!";
+            }
+        } else {
+            if (system("ssh $option_remote_host test -d $path") != 0) {
+                system("ssh $option_remote_host mkdir $path");
+            }
         }
     }
 }
@@ -1463,10 +1631,17 @@
         next unless -d "$source_dir/$database";
 	next unless check_if_required($database);
         
-        if (! -e "$backup_dir/$database") {
-            # create database directory for the backup
-            mkdir("$backup_dir/$database", 0777)
-                || Die "Couldn't create directory '$backup_dir/$database': $!";
+        if (!$option_remote_host) {
+            if (! -e "$backup_dir/$database") {
+                # create database directory for the backup
+                mkdir("$backup_dir/$database", 0777)
+                    || Die "Couldn't create directory '$backup_dir/$database': $!";
+            }
+        } else {
+            if (system("ssh $option_remote_host test -e $backup_dir/$database")
+                    != 0) {
+                system("ssh $option_remote_host mkdir $backup_dir/$database");
+            }
         }
 
         # copy files of this database
@@ -1488,8 +1663,13 @@
             if ($print_each_file) {
                 print "$prefix Backing up file '$file'\n";
             }
-            system("cp -p '$file' '$backup_dir/$database'")
-                and Die "Failed to copy file '$file': $!";
+            if (!$option_remote_host) {
+                system("cp -p '$file' '$backup_dir/$database'")
+                    and Die "Failed to copy file '$file': $!";
+            } else {
+                system("scp -Cp -c arcfour '$file' '$option_remote_host:$backup_dir/$database/'")
+                    and Die "Failed to scp file '$file': $!";
+            }
         }
     }
     closedir(DIR);
@@ -1576,15 +1756,20 @@
 #                   options are returned
 #
 sub read_config_file {
-    my $filename = shift;
+    #my $filename = shift;
     my $groups_ref = shift;
     my @lines ;
     my $i;
     my $group;
     my $group_hash_ref;
 
+    my $cmdline = '';
+    my $options = '--print-param';
+
     # read file to an array, one line per element
-    file_to_array($filename, \@lines);
+    #file_to_array($filename, \@lines);
+    $cmdline = "$option_ibbackup_binary $options";
+    @lines = `$cmdline`;
 
     # classify lines and save option values
     $group = 'default';
@@ -1637,7 +1822,7 @@
           # unknown
           print("$prefix: Warning: Ignored unrecognized line ",
                 $i + 1,
-                " in options file '$filename': '${lines[$i]}'\n"
+                " in options : '${lines[$i]}'\n"
                 );
       }
    }
@@ -1662,14 +1847,14 @@
 
     if (!exists $config{$group}) {
         # no group
-        print "$prefix fatal error: no '$group' group in MySQL options file '$config_file\n";
+        print "$prefix fatal error: no '$group' group in MySQL options\n";
         exit(1);
     }
     
     $group_hash_ref = ${$config_ref}{$group};
     if (!exists ${$group_hash_ref}{$option_name}) {
         # no option
-        print "$prefix fatal error: no '$option_name' option in group '$group' in MySQL options file '$config_file\n";
+        print "$prefix fatal error: no '$option_name' option in group '$group' in MySQL options\n";
         exit(1);
     }
 
