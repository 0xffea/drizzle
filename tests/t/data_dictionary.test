# Drizzle's data dictionary.

CREATE SCHEMA data_dictionary;

--replace_column 1 #
SELECT ID FROM data_dictionary.processlist;

--replace_column 1 #
SELECT ID FROM data_dictionary.processlist ORDER BY ID;

--replace_column 1 #
SELECT a.ID FROM data_dictionary.processlist as a, data_dictionary.processlist as b ORDER BY ID;

--replace_column 1 #
SELECT a.ID FROM data_dictionary.processlist as a, data_dictionary.processlist as b;

--replace_column 1 #
SELECT count(*) FROM data_dictionary.plugins;

--replace_column 1 #
SELECT count(*) FROM data_dictionary.columns;

--replace_column 1 #
SELECT count(*) FROM data_dictionary.indexes;

--replace_column 1 #
SELECT count(*) FROM data_dictionary.index_parts;

--replace_column 1 #
SELECT count(*) FROM data_dictionary.modules;

SELECT * FROM data_dictionary.character_sets ORDER BY CHARACTER_SET_NAME;

SELECT * FROM data_dictionary.collations ORDER BY COLLATION_NAME;

--replace_column 1 #
SELECT SCHEMA_NAME  FROM data_dictionary.schemas;

--replace_column 1 #
SELECT COLUMN_NAME  FROM data_dictionary.columns;

--replace_column 1 #
SELECT count(*) FROM data_dictionary.GLOBAL_STATEMENTS;

--replace_column 1 #
SELECT count(*) FROM data_dictionary.GLOBAL_STATUS;

--replace_column 1 #
SELECT count(*) FROM data_dictionary.GLOBAL_VARIABLES;

--replace_column 1 #
SELECT count(*) FROM data_dictionary.SESSION_STATEMENTS;

--replace_column 1 #
SELECT count(*) FROM data_dictionary.SESSION_STATUS;

# Make sure we don't change the names of the columns

use data_dictionary;

show create table CHARACTER_SETS ;
show create table COLLATIONS ;
show create table COLUMNS ;
show create table GLOBAL_STATUS ;
show create table GLOBAL_STATEMENTS ;
show create table GLOBAL_VARIABLES ;
show create table INDEXES ;
show create table INDEX_PARTS ;
show create table MODULES ;
show create table PLUGINS ;
show create table PROCESSLIST ;
show create table REFERENTIAL_CONSTRAINTS ;
show create table SCHEMAS ;
show create table SESSION_STATEMENTS;
show create table SESSION_STATUS;
show create table TABLES ;
show create table TABLE_CONSTRAINTS ;


# Slap tests for concurrency
CREATE SCHEMA drizzleslap;

--exec $DRIZZLE_SLAP --silent  --concurrency=5 --iterations=20  --query="select * from data_dictionary.SESSION_STATEMENTS" --delimiter=";"
--exec $DRIZZLE_SLAP --silent  --concurrency=5 --iterations=20  --query="select * from data_dictionary.SESSION_STATUS" --delimiter=";"
--exec $DRIZZLE_SLAP --silent  --concurrency=5 --iterations=20  --query="select * from data_dictionary.character_sets" --delimiter=";"
--exec $DRIZZLE_SLAP --silent  --concurrency=5 --iterations=20  --query="select * from data_dictionary.collations" --delimiter=";"
--exec $DRIZZLE_SLAP --silent  --concurrency=5 --iterations=20  --query="select * from data_dictionary.columns" --delimiter=";"
--exec $DRIZZLE_SLAP --silent  --concurrency=5 --iterations=20  --query="select * from data_dictionary.global_statements" --delimiter=";"
--exec $DRIZZLE_SLAP --silent  --concurrency=5 --iterations=20  --query="select * from data_dictionary.global_status" --delimiter=";"
--exec $DRIZZLE_SLAP --silent  --concurrency=5 --iterations=20  --query="select * from data_dictionary.global_variables" --delimiter=";"
--exec $DRIZZLE_SLAP --silent  --concurrency=5 --iterations=20  --query="select * from data_dictionary.index_parts" --delimiter=";"
--exec $DRIZZLE_SLAP --silent  --concurrency=5 --iterations=20  --query="select * from data_dictionary.indexes" --delimiter=";"
--exec $DRIZZLE_SLAP --silent  --concurrency=5 --iterations=20  --query="select * from data_dictionary.modules" --delimiter=";"
--exec $DRIZZLE_SLAP --silent  --concurrency=5 --iterations=20  --query="select * from data_dictionary.plugins" --delimiter=";"
--exec $DRIZZLE_SLAP --silent  --concurrency=5 --iterations=20  --query="select * from data_dictionary.processlist" --delimiter=";"
--exec $DRIZZLE_SLAP --silent  --concurrency=5 --iterations=20  --query="select * from data_dictionary.referential_constraints" --delimiter=";"
--exec $DRIZZLE_SLAP --silent  --concurrency=5 --iterations=20  --query="select * from data_dictionary.schemas" --delimiter=";"
--exec $DRIZZLE_SLAP --silent  --concurrency=5 --iterations=20  --query="select * from data_dictionary.table_constraints" --delimiter=";"
--exec $DRIZZLE_SLAP --silent  --concurrency=5 --iterations=20  --query="select * from data_dictionary.tables" --delimiter=";"

--exec $DRIZZLE_SLAP --silent  --concurrency=5 --iterations=20  --query="SELECT a.VARIABLE_NAME FROM data_dictionary.GLOBAL_STATEMENTS as a, data_dictionary.GLOBAL_STATEMENTS as b ORDER BY VARIABLE_NAME" --delimiter=";"
--exec $DRIZZLE_SLAP --silent  --concurrency=5 --iterations=20  --query="SELECT a.VARIABLE_NAME FROM data_dictionary.GLOBAL_STATUS as a, data_dictionary.GLOBAL_STATUS as b ORDER BY VARIABLE_NAME" --delimiter=";"
--exec $DRIZZLE_SLAP --silent  --concurrency=5 --iterations=20  --query="SELECT a.VARIABLE_NAME FROM data_dictionary.SESSION_STATEMENTS as a, data_dictionary.SESSION_STATEMENTS as b ORDER BY VARIABLE_NAME" --delimiter=";"
--exec $DRIZZLE_SLAP --silent  --concurrency=5 --iterations=20  --query="SELECT a.VARIABLE_NAME FROM data_dictionary.SESSION_STATUS as a, data_dictionary.SESSION_STATUS as b ORDER BY VARIABLE_NAME" --delimiter=";"
--exec $DRIZZLE_SLAP --silent  --concurrency=5 --iterations=20  --query="SELECT a.ID FROM data_dictionary.processlist as a, data_dictionary.processlist as b ORDER BY ID" --delimiter=";"

DROP SCHEMA drizzleslap;
DROP SCHEMA data_dictionary;

