# Copyright (C) 2000-2006 MySQL AB
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; version 2
# of the License.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the Free
# Software Foundation, Inc., 59 Temple Place - Suite 330, Boston,
# MA 02111-1307, USA

benchdir_root=		$(prefix)
testdir =	        $(benchdir_root)/mysql-test
EXTRA_SCRIPTS = 	tests/valgrind.supp $(PRESCRIPTS)
GENSCRIPTS =		tests/dtr tests/test-run
PRESCRIPTS =		tests/test-run.pl tests/stress-test.pl
PLUGIN_TESTS =		$(pandora_plugin_test_list)
ALL_TESTS =		main,big,$(PLUGIN_TESTS)
noinst_SCRIPTS =	$(GENSCRIPTS) $(PRESCRIPTS)
CLEANFILES += 		$(GENSCRIPTS) tests/mtr
noinst_PROGRAMS += 	tests/resolve_stack_dump
tests_resolve_stack_dump_SOURCES = tests/resolve_stack_dump.cc
tests_resolve_stack_dump_LDADD = ${TEST_LDADD}

TEST_LDADD=			$(top_builddir)/mysys/libmysys.la \
                        $(top_builddir)/mystrings/libmystrings.la \
			$(LIBINTL)

TEST_RUN= $(PERL) -I../$(top_srcdir)/tests/lib \
		../${top_srcdir}/tests/test-run.pl \
		--vardir=../${top_builddir}/tests/var \
		--suitepath=../${top_srcdir}/plugin \
		--testdir=../${top_srcdir}/tests \
		--mtr-build-thread=$$$$

EXTRA_DIST += \
	$(EXTRA_SCRIPTS) \
	${srcdir}/tests/suite \
	${srcdir}/tests/t \
	${srcdir}/tests/include/*.inc \
	${srcdir}/tests/include/*.sql \
	${srcdir}/tests/include/*.test \
	${srcdir}/tests/r/*.result \
	${srcdir}/tests/r/*.require \
	${srcdir}/tests/std_data \
	${srcdir}/tests/lib/*.pl \
	${srcdir}/tests/lib/My/*.pm

check: test-drizzle

# dtr - a shortcut for executing test-run.pl
tests/dtr:
	$(RM) -f tests/mtr tests/dtr
	$(LN_S) ${top_srcdir}/tests/test-run.pl tests/mtr
	$(LN_S) ${top_srcdir}/tests/test-run.pl tests/dtr
	$(mkdir_p) ${top_builddir}/tests/var

# test-run - a shortcut for executing test-run.pl
tests/test-run:
	$(RM) -f tests/test-run
	$(LN_S) ${top_srcdir}/tests/test-run.pl tests/test-run


.PHONY: test \
	test-all \
	test-big \
	test-drizzle \
	test-plugins

# Target 'test' will run the regression test suite using the built server.
#
# If you are running in a shared environment, users can avoid clashing
# port numbers by setting individual small numbers 1-100 to the
# environment variable MTR_BUILD_THREAD. The script "test-run"
# will then calculate the various port numbers it needs from this,
# making sure each user use different ports.

test: test-drizzle

# Please keep the list of tests in alphabetical order for ease of
# maintenance and verification

test-all:
	( cd tests && $(TEST_RUN) $(TEST_RUN_EXTRA_OPTIONS) --fast --force --suite=$(ALL_TESTS))

test-drizzle:
	( cd tests && $(TEST_RUN) $(TEST_RUN_EXTRA_OPTIONS) --fast --force --suite=main,$(PLUGIN_TESTS))

test-valgrind:
	( cd tests && $(TEST_RUN) $(TEST_RUN_EXTRA_OPTIONS) --valgrind --force --suite=main,$(PLUGIN_TESTS))

test-valgrind-suppressions:
	( cd tests && $(TEST_RUN) $(TEST_RUN_EXTRA_OPTIONS) --valgrind --valgrind-option='--gen-suppressions=all' --valgrind-option='--show-reachable=yes' --force --suite=main,$(PLUGIN_TESTS))

test-junitxml:
	( cd tests && $(TEST_RUN) $(TEST_RUN_EXTRA_OPTIONS) --fast --force --suite=main,$(PLUGIN_TESTS) --subunit | subunit2junitxml --no-passthrough > junit-format.xml )

test-big:
	( cd tests && $(TEST_RUN) $(TEST_RUN_EXTRA_OPTIONS) --fast --force --suite=big )

test-big-junitxml:
	( cd tests && $(TEST_RUN) $(TEST_RUN_EXTRA_OPTIONS) --fast --force --suite=big --subunit | subunit2junitxml --no-passthrough > junit-format-big.xml )

test-plugins:
	( cd tests && $(TEST_RUN) $(TEST_RUN_EXTRA_OPTIONS) --fast --force --suite=$(PLUGIN_TESTS) )

distclean-local: nukevar

nukevar:
	rm -rf tests/var

.PHONY: nukevar
