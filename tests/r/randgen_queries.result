drop table if exists t1;
show variables like 'version';
Variable_name	Value
version	####.##.####
select version();
version()
####.##.####
select database();
database()
test
CREATE TABLE `t1` (
`col_bigint` bigint,
`col_text` text,
`col_char` char (1),
`col_enum` enum ('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'),
`col_int` int,
`col_char_not_null` char (1) not null,
`col_int_not_null_key` int not null,
`col_text_not_null` text not null,
`col_enum_not_null_key` enum ('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z') not null,
`col_int_key` int,
`col_char_key` char (1),
`col_enum_not_null` enum ('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z') not null,
`col_text_not_null_key` text not null,
pk integer auto_increment,
`col_bigint_key` bigint,
`col_int_not_null` int not null,
`col_bigint_not_null` bigint not null,
`col_bigint_not_null_key` bigint not null,
`col_char_not_null_key` char (1) not null,
`col_text_key` text,
`col_enum_key` enum ('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'),
/*Indices*/
key (`col_int_not_null_key` ),
key (`col_enum_not_null_key` ),
key (`col_int_key` ),
key (`col_char_key` ),
key (`col_text_not_null_key`  (255)),
primary key (pk),
key (`col_bigint_key` ),
key (`col_bigint_not_null_key` ),
key (`col_char_not_null_key` ),
key (`col_text_key`  (255)),
key (`col_enum_key` )) ENGINE=innodb;
Warnings:
Warning	1071	Specified key was too long; max key length is 767 bytes
Warning	1071	Specified key was too long; max key length is 767 bytes
set AUTOCOMMIT=OFF;
select table_schema, 
table_name, 
CASE WHEN table_type = 'BASE TABLE' THEN 'table' 
WHEN table_type = 'VIEW' THEN 'view' 
WHEN table_type = 'SYSTEM VIEW' then 'view' 
ELSE 'misc' END, 
column_name
# CASE WHEN column_key = 'PRI' THEN 'primary' 
#      WHEN column_key = 'MUL' THEN 'indexed' 
#      WHEN column_key = 'UNI' THEN 'indexed' 
# ELSE 'ordinary' END 
FROM data_dictionary.tables INNER JOIN data_dictionary.columns USING(table_schema, table_name);
table_schema	table_name	CASE WHEN table_type = 'BASE TABLE' THEN 'table' 
WHEN table_type = 'VIEW' THEN 'view' 
WHEN table_type = 'SYSTEM VIEW' then 'view' 
ELSE 'misc' END	column_name
data_dictionary	CHARACTER_SETS	misc	CHARACTER_SET_NAME
data_dictionary	CHARACTER_SETS	misc	DEFAULT_COLLATE_NAME
data_dictionary	CHARACTER_SETS	misc	DESCRIPTION
data_dictionary	CHARACTER_SETS	misc	MAXLEN
data_dictionary	COLLATIONS	misc	CHARACTER_SET_NAME
data_dictionary	COLLATIONS	misc	COLLATION_NAME
data_dictionary	COLLATIONS	misc	DESCRIPTION
data_dictionary	COLLATIONS	misc	ID
data_dictionary	COLLATIONS	misc	IS_DEFAULT
data_dictionary	COLLATIONS	misc	IS_COMPILED
data_dictionary	COLLATIONS	misc	SORTLEN
data_dictionary	COLUMNS	misc	TABLE_SCHEMA
data_dictionary	COLUMNS	misc	TABLE_NAME
data_dictionary	COLUMNS	misc	COLUMN_NAME
data_dictionary	COLUMNS	misc	COLUMN_TYPE
data_dictionary	COLUMNS	misc	ORDINAL_POSITION
data_dictionary	COLUMNS	misc	COLUMN_DEFAULT
data_dictionary	COLUMNS	misc	COLUMN_DEFAULT_IS_NULL
data_dictionary	COLUMNS	misc	COLUMN_DEFAULT_UPDATE
data_dictionary	COLUMNS	misc	IS_NULLABLE
data_dictionary	COLUMNS	misc	DATA_TYPE
data_dictionary	COLUMNS	misc	CHARACTER_MAXIMUM_LENGTH
data_dictionary	COLUMNS	misc	CHARACTER_OCTET_LENGTH
data_dictionary	COLUMNS	misc	NUMERIC_PRECISION
data_dictionary	COLUMNS	misc	NUMERIC_SCALE
data_dictionary	COLUMNS	misc	COLLATION_NAME
data_dictionary	COLUMNS	misc	COLUMN_COMMENT
data_dictionary	GLOBAL_STATEMENTS	misc	VARIABLE_NAME
data_dictionary	GLOBAL_STATEMENTS	misc	VARIABLE_VALUE
data_dictionary	GLOBAL_STATUS	misc	VARIABLE_NAME
data_dictionary	GLOBAL_STATUS	misc	VARIABLE_VALUE
data_dictionary	GLOBAL_VARIABLES	misc	VARIABLE_NAME
data_dictionary	GLOBAL_VARIABLES	misc	VARIABLE_VALUE
data_dictionary	INDEXES	misc	TABLE_SCHEMA
data_dictionary	INDEXES	misc	TABLE_NAME
data_dictionary	INDEXES	misc	INDEX_NAME
data_dictionary	INDEXES	misc	IS_PRIMARY
data_dictionary	INDEXES	misc	IS_UNIQUE
data_dictionary	INDEXES	misc	IS_NULLABLE
data_dictionary	INDEXES	misc	KEY_LENGTH
data_dictionary	INDEXES	misc	INDEX_TYPE
data_dictionary	INDEXES	misc	INDEX_COMMENT
data_dictionary	INDEX_PARTS	misc	TABLE_SCHEMA
data_dictionary	INDEX_PARTS	misc	TABLE_NAME
data_dictionary	INDEX_PARTS	misc	INDEX_NAME
data_dictionary	INDEX_PARTS	misc	COLUMN_NAME
data_dictionary	INDEX_PARTS	misc	COLUMN_NUMBER
data_dictionary	INDEX_PARTS	misc	SEQUENCE_IN_INDEX
data_dictionary	INDEX_PARTS	misc	COMPARE_LENGTH
data_dictionary	INDEX_PARTS	misc	IS_ORDER_REVERSE
data_dictionary	INNODB_STATUS	misc	VARIABLE_NAME
data_dictionary	INNODB_STATUS	misc	VARIABLE_VALUE
data_dictionary	LOCAL_TABLE_NAMES	misc	TABLE_NAME
data_dictionary	LOCAL_TABLE_STATUS	misc	Name
data_dictionary	LOCAL_TABLE_STATUS	misc	Engine
data_dictionary	LOCAL_TABLE_STATUS	misc	Version
data_dictionary	LOCAL_TABLE_STATUS	misc	Row_format
data_dictionary	LOCAL_TABLE_STATUS	misc	Rows
data_dictionary	LOCAL_TABLE_STATUS	misc	Avg_row_length
data_dictionary	LOCAL_TABLE_STATUS	misc	Data_length
data_dictionary	LOCAL_TABLE_STATUS	misc	Max_data_length
data_dictionary	LOCAL_TABLE_STATUS	misc	Index_length
data_dictionary	LOCAL_TABLE_STATUS	misc	Data_free
data_dictionary	LOCAL_TABLE_STATUS	misc	Auto_increment
data_dictionary	LOCAL_TABLE_STATUS	misc	Create_time
data_dictionary	LOCAL_TABLE_STATUS	misc	Update_time
data_dictionary	LOCAL_TABLE_STATUS	misc	Check_time
data_dictionary	LOCAL_TABLE_STATUS	misc	Collation
data_dictionary	LOCAL_TABLE_STATUS	misc	Checksum
data_dictionary	LOCAL_TABLE_STATUS	misc	Create_options
data_dictionary	LOCAL_TABLE_STATUS	misc	Comment
data_dictionary	MODULES	misc	MODULE_NAME
data_dictionary	MODULES	misc	MODULE_VERSION
data_dictionary	MODULES	misc	MODULE_AUTHOR
data_dictionary	MODULES	misc	IS_BUILTIN
data_dictionary	MODULES	misc	MODULE_LIBRARY
data_dictionary	MODULES	misc	MODULE_DESCRIPTION
data_dictionary	MODULES	misc	MODULE_LICENSE
data_dictionary	PLUGINS	misc	PLUGIN_NAME
data_dictionary	PLUGINS	misc	PLUGIN_TYPE
data_dictionary	PLUGINS	misc	IS_ACTIVE
data_dictionary	PLUGINS	misc	MODULE_NAME
data_dictionary	PROCESSLIST	misc	ID
data_dictionary	PROCESSLIST	misc	USER
data_dictionary	PROCESSLIST	misc	HOST
data_dictionary	PROCESSLIST	misc	DB
data_dictionary	PROCESSLIST	misc	COMMAND
data_dictionary	PROCESSLIST	misc	TIME
data_dictionary	PROCESSLIST	misc	STATE
data_dictionary	PROCESSLIST	misc	INFO
data_dictionary	REFERENTIAL_CONSTRAINTS	misc	CONSTRAINT_SCHEMA
data_dictionary	REFERENTIAL_CONSTRAINTS	misc	CONSTRAINT_NAME
data_dictionary	REFERENTIAL_CONSTRAINTS	misc	UNIQUE_CONSTRAINT_SCHEMA
data_dictionary	REFERENTIAL_CONSTRAINTS	misc	UNIQUE_CONSTRAINT_NAME
data_dictionary	REFERENTIAL_CONSTRAINTS	misc	MATCH_OPTION
data_dictionary	REFERENTIAL_CONSTRAINTS	misc	UPDATE_RULE
data_dictionary	REFERENTIAL_CONSTRAINTS	misc	DELETE_RULE
data_dictionary	REFERENTIAL_CONSTRAINTS	misc	TABLE_NAME
data_dictionary	REFERENTIAL_CONSTRAINTS	misc	REFERENCED_TABLE_NAME
data_dictionary	SCHEMAS	misc	SCHEMA_NAME
data_dictionary	SCHEMAS	misc	DEFAULT_COLLATION_NAME
data_dictionary	SCHEMA_NAMES	misc	SCHEMA_NAME
data_dictionary	SESSION_STATEMENTS	misc	VARIABLE_NAME
data_dictionary	SESSION_STATEMENTS	misc	VARIABLE_VALUE
data_dictionary	SESSION_STATUS	misc	VARIABLE_NAME
data_dictionary	SESSION_STATUS	misc	VARIABLE_VALUE
data_dictionary	SESSION_VARIABLES	misc	VARIABLE_NAME
data_dictionary	SESSION_VARIABLES	misc	VARIABLE_VALUE
data_dictionary	TABLES	misc	TABLE_SCHEMA
data_dictionary	TABLES	misc	TABLE_NAME
data_dictionary	TABLES	misc	TABLE_TYPE
data_dictionary	TABLES	misc	ENGINE
data_dictionary	TABLES	misc	ROW_FORMAT
data_dictionary	TABLES	misc	TABLE_COLLATION
data_dictionary	TABLES	misc	TABLE_COMMENT
data_dictionary	TABLE_CONSTRAINTS	misc	CONSTRAINT_SCHEMA
data_dictionary	TABLE_CONSTRAINTS	misc	CONSTRAINT_NAME
data_dictionary	TABLE_CONSTRAINTS	misc	TABLE_SCHEMA
data_dictionary	TABLE_CONSTRAINTS	misc	TABLE_NAME
data_dictionary	TABLE_CONSTRAINTS	misc	CONSTRAINT_TYPE
test	t1	misc	col_bigint
test	t1	misc	col_text
test	t1	misc	col_char
test	t1	misc	col_enum
test	t1	misc	col_int
test	t1	misc	col_char_not_null
test	t1	misc	col_int_not_null_key
test	t1	misc	col_text_not_null
test	t1	misc	col_enum_not_null_key
test	t1	misc	col_int_key
test	t1	misc	col_char_key
test	t1	misc	col_enum_not_null
test	t1	misc	col_text_not_null_key
test	t1	misc	pk
test	t1	misc	col_bigint_key
test	t1	misc	col_int_not_null
test	t1	misc	col_bigint_not_null
test	t1	misc	col_bigint_not_null_key
test	t1	misc	col_char_not_null_key
test	t1	misc	col_text_key
test	t1	misc	col_enum_key
select AVG(`col_int_key`) + AVG(`col_int`) AS average1,
(SUM(`col_int_key`) + SUM(`col_int`)) / COUNT(*) AS average2,
COUNT(*) AS count FROM t1;
average1	average2	count
NULL	NULL	0
select collation_name,character_set_name FROM data_dictionary.collations;
collation_name	character_set_name
utf8_general_ci	utf8_general_ci
utf8_bin	utf8_general_ci
utf8_unicode_ci	utf8_general_ci
utf8_icelandic_ci	utf8_general_ci
utf8_latvian_ci	utf8_general_ci
utf8_romanian_ci	utf8_general_ci
utf8_slovenian_ci	utf8_general_ci
utf8_polish_ci	utf8_general_ci
utf8_estonian_ci	utf8_general_ci
utf8_spanish_ci	utf8_general_ci
utf8_swedish_ci	utf8_general_ci
utf8_turkish_ci	utf8_general_ci
utf8_czech_ci	utf8_general_ci
utf8_danish_ci	utf8_general_ci
utf8_lithuanian_ci	utf8_general_ci
utf8_slovak_ci	utf8_general_ci
utf8_spanish2_ci	utf8_general_ci
utf8_roman_ci	utf8_general_ci
utf8_persian_ci	utf8_general_ci
utf8_esperanto_ci	utf8_general_ci
utf8_hungarian_ci	utf8_general_ci
utf8_sinhala_ci	utf8_general_ci
binary	binary
select COUNT(*) from data_dictionary.tables;
COUNT(*)
23
